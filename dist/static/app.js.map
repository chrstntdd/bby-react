{"version":3,"sources":["/src/index.js","/src/reducers/index.js","/src/actions/types.js","/src/reducers/auth_reducer.js","/src/reducers/bby_reducer.js","/src/components/main.jsx","/src/components/auth/register.jsx","/src/actions/index.js","/src/components/auth/form-input.jsx","/src/components/auth/loading.jsx","/src/components/auth/login.jsx","/src/components/auth/logout.jsx","/src/components/auth/forgot_password.jsx","/src/components/auth/reset_password.jsx","/src/components/auth/verify_email.jsx","/src/components/pages/not-found.jsx","/src/components/pages/landing-page/landing-page.jsx","/src/components/pages/landing-page/hero-area.jsx","/src/components/pages/landing-page/how-section.jsx","/src/components/pages/landing-page/how-card.jsx","/src/components/pages/landing-page/about-section.jsx","/src/components/pages/landing-page/footer.jsx","/src/components/dashboard.jsx","/src/components/search-bar.jsx","/src/components/product-table.jsx","/src/components/side-bar.jsx","/src/components/dashboard-header.jsx","/src/components/table-modal.jsx","/src/components/select-table.jsx","/src/components/auth/require_auth.jsx"],"names":["composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","undefined","console","log","render","document","getElementById","rootReducer","auth","form","plugin","postUPC","state","action","type","login","register","table","UNAUTH_USER","FORGOT_PASSWORD_REQUEST","RESET_PASSWORD_REQUEST","SET_NEW_TABLE_ID","LOAD_BLANK_TABLE","LOAD_SAVED_TABLE","TOGGLE_LOAD_TABLE_MODAL","GET_USER_TABLE_DATA_SUCCESS","NOT_VERIFIED_LOGIN_ERROR","CLEAR_FLASH_MESSAGE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","POST_UPC","REMOVE_PRODUCT_FROM_TABLE","DECREMENT_PRODUCT_QUANTITY","INCREMENT_PRODUCT_QUANTITY","FORMAT_TABLE","HIDE_ACTIONS","SHOW_ACTIONS","CLEAR_TABLE","INVALID_UPC","SYNC_TABLE_REQUEST","SYNC_TABLE_SUCCESS","SYNC_TABLE_FAILURE","INITIAL_STATE","content","error","message","authenticated","userProfile","payload","user","jwt","waiting","lastItemScanned","lastTimeSaved","tableId","products","Object","assign","formatted","upc","map","product","quantity","totalValue","Math","round","value","filter","orderBy","printing","showModal","selectOptionData","require","Main","validate","errors","formProps","firstName","lastName","email","password","Register","props","registerInputs","name","label","handleFormSubmit","registerUser","renderAlert","errorMessage","handleSubmit","valid","formInputs","input","index","bind","Component","mapStateToProps","_find","API_URL","process","env","NODE_ENV","CLIENT_ROOT_URL","timeout","Promise","setTimeout","resolve","ms","getProductDetails","dispatch","getState","response","post","headers","Authorization","data","alert","decrementProductQuantity","removeItemFromTable","formatTable","hideActions","showActions","printTable","print","clearTable","syncToDatabase","userId","id","put","Date","toLocaleTimeString","createNewTable","_id","getPreviousTableData","get","tableData","tableInstance","parsedDate","createdOn","formattedDate","toDateString","loadTable","toggleShowTableModal","loginUser","employeeNumber","trim","token","errorResponse","keys","validationErrors","forEach","push","msg","emailMessage","verifyMessage","passwordMessage","storeNumber","messages","logoutUser","getForgotPasswordToken","resetPassword","confirmEmail","required","renderField","field","Input","LoadingIndicator","Login","loginInputs","actions","Logout","componentWillMount","ForgotPassword","inputs","passwordConfirm","ResetPassword","history","componentWillUpdate","nextProps","resetToken","match","params","resetMessage","VerifyEmail","componentDidMount","verifyEmailToken","verifyToken","redirectToDash","NotFoundPage","LandingPage","footerData","link","cardData","img","desc","HeroArea","HowSection","howCards","card","Card","AboutSection","Footer","Dashboard","setInterval","modal","SearchBar","handleChange","e","inputValue","currentTarget","isNaN","Number","length","toString","ProductTable","removeItem","decrementQuantity","columns","Header","accessor","minWidth","Cell","row","departmentId","department","show","filterable","height","PureComponent","_debounce","SideBar","maxWait","leading","DashboardHeader","userName","userData","TableModal","selectComponent","SelectTable","handleSelectTableToLoad","userTables","tableIdToLoad","i","target","srcElement","loadedTable","Authentication","location","router"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AAkBA;;;;AAhBA;AACA,IAAMA,mBAAmBC,OAAOC,oCAAP,kBAAzB;;AAEA;AACA,IAAMC,QAAQ,yCAEZC,SAFY,EAGZJ,iBAAiB,iDAAjB,EAA8C,kCAA9C,CAHY,CAAd;;AAMA;AACA;AACA,gCAAaG,KAAb,EAAoB,YAAM;AACxBE,UAAQC,GAAR,CAAY,uBAAZ;AACD,CAFD;;AAMA,mBAASC,MAAT,CACE;AAAA;AAAA,IAAU,OAAOJ,KAAjB;AACE;AAAA;AAAA;AACE;AADF;AADF,CADF,EAMEK,SAASC,cAAT,CAAwB,MAAxB,CANF;;;;;;;;AC9BA;;AACA;;AASA;;AACA;;;;AACA;;;;;;AAEA,IAAMC,cAAc,4BAAgB;AAClCC,8BADkC;AAElCC,QAAM,mBAAYC,MAAZ,CAAmB;AACvB;AACAC,aAAS,iBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1B,cAAQA,OAAOC,IAAf;AACE;AACA;AACA;AACE,iBAAOb,SAAP;AACF;AACE,iBAAOW,KAAP;AANJ;AAQD,KAXsB;AAYvBG,WAAO,eAACH,KAAD,EAAQC,MAAR,EAAmB;AACxB,cAAQA,OAAOC,IAAf;AACE;AACA;AACE,iBAAOb,SAAP;AACF;AACE,iBAAOW,KAAP;AALJ;AAOD,KApBsB;AAqBvBI,cAAU,kBAACJ,KAAD,EAAQC,MAAR,EAAmB;AAC3B,cAAQA,OAAOC,IAAf;AACE;AACA;AACE,iBAAOb,SAAP;AACF;AACE,iBAAOW,KAAP;AALJ;AAOD;AA7BsB,GAAnB,CAF4B;AAiClCK;AAjCkC,CAAhB,CAApB;;kBAoCeV;;;;;;;AClDf;AACO,IAAMW,oCAAc,aAApB;AAAA,IACLC,4DAA0B,yBADrB;AAAA,IAELC,0DAAyB,wBAFpB;AAAA,IAGLC,8CAAmB,kBAHd;AAAA,IAILC,8CAAmB,kBAJd;AAAA,IAKLC,8CAAmB,kBALd;AAAA,IAMLC,4DAA0B,yBANrB;AAAA,IAOLC,oEAA8B,6BAPzB;AAAA,IAQLC,8DAA2B,0BARtB;AAAA,IASLC,oDAAsB,qBATjB;AAAA,IAULC,wCAAgB,eAVX;AAAA,IAWLC,wCAAgB,eAXX;AAAA,IAYLC,wCAAgB,eAZX;AAAA,IAaLC,8CAAmB,kBAbd;AAAA,IAcLC,8CAAmB,kBAdd;AAAA,IAeLC,8CAAmB,kBAfd;;AAiBP;AACO,IAAMC,8BAAW,UAAjB;;AAEP;AACO,IAAMC,gEAA4B,2BAAlC;AAAA,IACLC,kEAA6B,4BADxB;AAAA,IAELC,kEAA6B,4BAFxB;AAAA,IAGLC,sCAAe,cAHV;AAAA,IAILC,sCAAe,cAJV;AAAA,IAKLC,sCAAe,cALV;AAAA,IAMLC,oCAAc,aANT;AAAA,IAOLC,oCAAc,aAPT;AAAA,IAQLC,kDAAqB,oBARhB;AAAA,IASLC,kDAAqB,oBAThB;AAAA,IAULC,kDAAqB,oBAVhB;;;;;;;;;;kBCMQ,YAAwC;AAAA,MAA/BjC,KAA+B,uEAAvBkC,aAAuB;AAAA,MAARjC,MAAQ;;AACrD,UAAQA,OAAOC,IAAf;AACE;AACE,0BACKF,KADL;AAEEmC,iBAAS,EAFX;AAGEC,eAAO,EAHT;AAIEC,iBAAS,EAJX;AAKEC,uBAAe,IALjB;AAMEC,qBAAatC,OAAOuC,OAAP,CAAeC,IAN9B;AAOEC,aAAKzC,OAAOuC,OAAP,CAAeE,GAPtB;AAQEC,iBAAS;AARX;AAUF;AACE,0BAAY3C,KAAZ,IAAmBsC,eAAe,KAAlC,EAAyCI,KAAK,IAA9C,EAAoDH,aAAa,IAAjE;AACF;AACE,0BACKvC,KADL;AAEEoC,eAAOnC,OAAOuC,OAFhB;AAGEG,iBAAS;AAHX;AAKF;AACE,0BACK3C,KADL;AAEEoC,eAAOnC,OAAOuC,OAFhB;AAGEG,iBAAS;AAHX;AAKF;AAA0B;AACxB,4BACK3C,KADL;AAEEoC,iBAAO,EAFT;AAGEC,mBAAS,EAHX;AAIEF,mBAAS,EAJX;AAKEQ,mBAAS;AALX;AAOD;AACD;AACE,0BAAY3C,KAAZ,IAAmBqC,SAASpC,OAAOuC,OAAnC;AACF;AACE,0BAAYxC,KAAZ,IAAmBqC,SAASpC,OAAOuC,OAAnC;AACF;AACE,0BAAYxC,KAAZ,IAAmBqC,SAASpC,OAAOuC,OAAnC,EAA4CG,SAAS,KAArD;AACF;AACE,0BAAY3C,KAAZ,IAAmBoC,OAAOnC,OAAOuC,OAAjC,EAA0CG,SAAS,KAAnD;AACF;AACA;AACE,0BACK3C,KADL;AAEE2C,iBAAS;AAFX;AAIF;AACA;AACA;AACE,0BAAY3C,KAAZ,IAAmB2C,SAAS,IAA5B;AACF;AACE,aAAO3C,KAAP;AAtDJ;AAwDD;;AArFD;;AAkBA,IAAMkC,gBAAgB;AACpBK,eAAa,IADO;AAEpBG,OAAK,IAFe;AAGpBN,SAAO,EAHa;AAIpBC,WAAS,EAJW;AAKpBF,WAAS,EALW;AAMpBG,iBAAe,KANK;AAOpBK,WAAS;AAPW,CAAtB;;;;;;;;;;kBCee,YAAwC;AAAA,MAA/B3C,KAA+B,uEAAvBkC,aAAuB;AAAA,MAARjC,MAAQ;;AACrD,UAAQA,OAAOC,IAAf;AACE;AACA;AAAoB;AAClB,4BACKF,KADL;AAEE4C,2BAAiB,EAFnB;AAGEC,yBAAe,EAHjB;AAIEC,mBAAS,EAJX;AAKEC,oBAAU;AALZ;AAOD;AACD;AACE;;;AAGA,aAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBjD,KAAlB,eACFA,KADE;AAELkD,mBAAW,KAFN;AAGLH,mBAAW9C,OAAOuC,OAAlB,SAA8BxC,MAAM+C,QAApC,CAHK;AAILH,yBAAiB3C,OAAOuC,OAAP,CAAeW;AAJ3B,SAAP;AAMF;AACE;AACA,0BACKnD,KADL;AAEE+C,kBAAU/C,MAAM+C,QAAN,CAAeK,GAAf,CACR;AAAA,iBACEnD,OAAOuC,OAAP,KAAmBa,QAAQF,GAA3B,gBAESE,OAFT;AAGMC,sBAAUD,QAAQC,QAAR,GAAmB,CAHnC;AAIMC,wBAAYC,KAAKC,KAAL,CAAW,CAACJ,QAAQC,QAAR,GAAmB,CAApB,IAAyBD,QAAQK,KAA5C;AAJlB,eAMIL,OAPN;AAAA,SADQ,CAFZ;AAYET,yBAAiB3C,OAAOuC;AAZ1B;AAcF;AACE,0BACKxC,KADL;AAEE+C,kBAAU/C,MAAM+C,QAAN,CAAeK,GAAf,CACR;AAAA,iBACEnD,OAAOuC,OAAP,KAAmBa,QAAQF,GAA3B,gBAESE,OAFT;AAGMC,sBAAUD,QAAQC,QAAR,GAAmB,CAAnB,GAAuBD,QAAQC,QAAR,GAAmB,CAA1C,GAA8C,CAH9D;AAIMC,wBAAYC,KAAKC,KAAL,CAAW,CAACJ,QAAQC,QAAR,GAAmB,CAApB,IAAyBD,QAAQK,KAA5C;AAJlB,eAMIL,OAPN;AAAA,SADQ;AAFZ;AAaF;AACE,0BACKrD,KADL;AAEE+C,kBAAU/C,MAAM+C,QAAN,CAAeY,MAAf,CACR;AAAA,iBAAWN,QAAQF,GAAR,KAAgBlD,OAAOuC,OAAlC;AAAA,SADQ;AAFZ;AAMF;AACE,0BACKxC,KADL;AAEE+C,kBAAUa,QACR5D,MAAM+C,QADE,EAER,CAAC,cAAD,EAAiB,SAAjB,EAA4B,KAA5B,CAFQ,EAGR,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAHQ,CAFZ;AAOEG,mBAAW;AAPb;AASF;AACE,0BACKlD,KADL;AAEE6D,kBAAU;AAFZ;AAIF;AACE,0BACK7D,KADL;AAEE6D,kBAAU;AAFZ;AAIF;AACE,0BACK7D,KADL;AAEE+C,kBAAU;AAFZ;AAIF;AACE,0BACK/C,KADL;AAEE6C,uBAAe5C,OAAOuC;AAFxB;AAIF;AACE,0BACKxC,KADL;AAEE8C,iBAAS7C,OAAOuC;AAFlB;AAIF;AACE,0BACKxC,KADL;AAEE+C,kBAAU;AAFZ;AAIF;AACE,0BACK/C,KADL;AAEE+C,kBAAU9C,OAAOuC;AAFnB;AAIF;AACE,0BACKxC,KADL;AAEE8D,mBAAW,CAAC9D,MAAM8D;AAFpB;AAIF;AACE,0BACK9D,KADL;AAEE+D,0BAAkB9D,OAAOuC;AAF3B;AAIF;AACE,0BACKxC,KADL;AAEE+C,kBAAU,EAFZ;AAGEG,mBAAW,KAHb;AAIEW,kBAAU,KAJZ;AAKEf,iBAAS,EALX;AAMEgB,mBAAW,KANb;AAOEC,0BAAkB;AAPpB;AASF;AACE,aAAO/D,KAAP;AA5HJ;AA8HD;;AAhKD;;AAoBA,IAAM4D,UAAUI,QAAQ,gBAAR,CAAhB;;AAEA,IAAM9B,gBAAgB;AACpBa,YAAU,EADU;AAEpBG,aAAW,KAFS;AAGpBW,YAAU,KAHU;AAIpBf,WAAS,EAJW;AAKpBgB,aAAW,KALS;AAMpBC,oBAAkB,IANE;AAOpBlB,iBAAe,EAPK;AAQpBD,mBAAiB;AARG,CAAtB;;;;;;;;ACtBA;;;;AACA;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AAGA;;;;AAGA;;;;;;AAJA;;;AAJA;;;AARA;AAkBA,IAAMqB,OAAO,SAAPA,IAAO;AAAA,SACX;AAAA;AAAA;AACE;AAAA;AAAA;AACE,6DAAO,WAAP,EAAa,MAAK,GAAlB,EAAsB,gCAAtB,GADF;AAEE,6DAAO,WAAP,EAAa,MAAK,UAAlB,EAA6B,6BAA7B,GAFF;AAGE,6DAAO,WAAP,EAAa,MAAK,UAAlB,EAA6B,0BAA7B,GAHF;AAIE,6DAAO,WAAP,EAAa,MAAK,YAAlB,EAA+B,WAAW,gDAA1C,GAJF;AAKE,6DAAO,WAAP,EAAa,MAAK,SAAlB,EAA4B,2BAA5B,GALF;AAME,6DAAO,WAAP,EAAa,MAAK,kBAAlB,EAAqC,oCAArC,GANF;AAOE;AACE,mBADF;AAEE,cAAK,6BAFP;AAGE;AAHF,QAPF;AAYE,6DAAO,MAAK,6BAAZ,EAA0C,iCAA1C,GAZF;AAaE,6DAAO,6BAAP;AAbF;AADF,GADW;AAAA,CAAb;;AAHA;kBAsBeA;;;;;;;;;;;ACxCf;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;AAEA,IAAMpE,OAAO,0BAAU;AACrBA,QAAM,UADe;AAErBqE;AAFqB,CAAV,CAAb;;AAKA,IAAMA,WAAW,SAAXA,QAAW,YAAa;AAC5B,MAAMC,SAAS,EAAf;;AAEA,MAAI,CAACC,UAAUC,SAAf,EAA0B;AACxBF,WAAOE,SAAP,GAAmB,4BAAnB;AACD;AACD,MAAI,CAACD,UAAUE,QAAf,EAAyB;AACvBH,WAAOG,QAAP,GAAkB,2BAAlB;AACD;AACD,MAAI,CAACF,UAAUG,KAAf,EAAsB;AACpBJ,WAAOI,KAAP,GAAe,wBAAf;AACD;AACD,MAAI,CAACH,UAAUI,QAAf,EAAyB;AACvBL,WAAOK,QAAP,GAAkB,yBAAlB;AACD;AACD,SAAOL,MAAP;AACD,CAhBD;;IAkBaM,mBAAAA;;;AACX,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAEjB,UAAK1E,KAAL,GAAa;AACX2E,sBAAgB,CACd;AACEC,cAAM,WADR;AAEE1E,cAAM,MAFR;AAGE2E,eAAO;AAHT,OADc,EAMd;AACED,cAAM,UADR;AAEE1E,cAAM,MAFR;AAGE2E,eAAO;AAHT,OANc,EAWd;AACED,cAAM,aADR;AAEE1E,cAAM,QAFR;AAGE2E,eAAO;AAHT,OAXc,EAgBd;AACED,cAAM,gBADR;AAEE1E,cAAM,MAFR;AAGE2E,eAAO;AAHT,OAhBc,EAqBd;AACED,cAAM,UADR;AAEE1E,cAAM,UAFR;AAGE2E,eAAO;AAHT,OArBc,EA0Bd;AACED,cAAM,iBADR;AAEE1E,cAAM,UAFR;AAGE2E,eAAO;AAHT,OA1Bc;AADL,KAAb;AAFiB;AAoClB;;qBACDC,6CAAiBV,WAAW;AAC1B,SAAKM,KAAL,CAAWK,YAAX,CAAwBX,SAAxB;AACD;;qBACDY,qCAAc;AACZ,QAAI,KAAKN,KAAL,CAAWO,YAAf,EAA6B;AAC3B,aACE;AAAA;AAAA,UAAK,WAAU,eAAf;AACE;AAAA;AAAA;AAAI,eAAKP,KAAL,CAAWO;AAAf;AADF,OADF;AAKD,KAND,MAMO,IAAI,KAAKP,KAAL,CAAWrC,OAAf,EAAwB;AAC7B,aACE;AAAA;AAAA,UAAK,WAAU,iBAAf;AACE;AAAA;AAAA;AAAI,eAAKqC,KAAL,CAAWrC;AAAf;AADF,OADF;AAKD;AACF;;qBACD7C,2BAAS;AAAA,iBACkC,KAAKkF,KADvC;AAAA,QACCQ,YADD,UACCA,YADD;AAAA,QACeC,KADf,UACeA,KADf;AAAA,QACsBxC,OADtB,UACsBA,OADtB;;;AAGP,QAAMyC,aAAa,KAAKpF,KAAL,CAAW2E,cAAX,CAA0BvB,GAA1B,CAA8B,UAACiC,KAAD,EAAQC,KAAR;AAAA,aAC/C,8DAAO,KAAKA,KAAZ,IAAuBD,KAAvB,EAD+C;AAAA,KAA9B,CAAnB;AAGA,WACE;AAAA;AAAA,QAAS,IAAG,kBAAZ;AACG,WAAKL,WAAL,EADH;AAEE;AACE,iBAASrC,OADX;AAEE,iBAAS;AAFX,QAFF;AAME;AAAA;AAAA,UAAS,IAAG,eAAZ,EAA4B,WAAWA,UAAU,MAAV,GAAmB,MAA1D;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAM,UAAUuC,aAAa,KAAKJ,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B,CAAb,CAAhB;AACGH,oBADH;AAEE;AAAA;AAAA,cAAQ,UAAU,CAACD,KAAnB,EAA0B,MAAK,QAA/B;AAAA;AAAA;AAFF;AAFF;AANF,KADF;AAkBD;;;EAhF2B,gBAAMK;;AAmFpC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChC9C,aAAS3C,MAAMJ,IAAN,CAAW+C,OADY;AAEhCsC,kBAAcjF,MAAMJ,IAAN,CAAWwC,KAFO;AAGhCC,aAASrC,MAAMJ,IAAN,CAAWyC,OAHY;AAIhCC,mBAAetC,MAAMJ,IAAN,CAAW0C;AAJM,GAAV;AAAA,CAAxB;;kBAOe,gCACb,yBAAQmD,eAAR,EAAyB,EAAEV,mCAAF,EAAzB,EAA2ClF,KAAK4E,QAAL,CAA3C,CADa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Hf;;;;AACA;;AACA;;;;;;AA8BA,IAAMiB,QAAQ1B,QAAQ,aAAR,CAAd;;AAEA,IAAI2B,gBAAJ;AACAC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACKH,UAAU,qDADf,GAEKA,UAAU,8BAFf;;AAIA,IAAMI,kBAAkB,uBAAxB;;AAEA,IAAIC,UAAU,SAAVA,OAAU;AAAA,SAAM,IAAIC,OAAJ,CAAY;AAAA,WAAWC,WAAWC,OAAX,EAAoBC,EAApB,CAAX;AAAA,GAAZ,CAAN;AAAA,CAAd;;AAEO,IAAMC,gDAAoB,SAApBA,iBAAoB;AAAA;AAAA,yDAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChCvG,mBADgC,GACxBuG,UADwB;AAEhC7D,iBAFgC,GAE1B1C,MAAMJ,IAAN,CAAW8C,GAFe;AAGhCK,sBAHgC,GAGrB/C,MAAMK,KAAN,CAAY0C,QAHS;;AAAA,oBAIlC2C,MAAM3C,QAAN,EAAgBI,GAAhB,MAAyB9D,SAJS;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAS9B2G,QAAQ,GAAR,CAT8B;;AAAA;AAAA;AAAA,qBAU9BM,SAAS,EAAEpG,uCAAF,EAAoCsC,SAASW,IAAIA,GAAjD,EAAT,CAV8B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAc9BqD,sBAd8B;AAAA;AAAA,qBAejB,gBAAMC,IAAN,CAAcd,OAAd,oBAAsCxC,GAAtC,EAA2C;AAC1DuD,yBAAS,EAAEC,eAAejE,GAAjB;AADiD,eAA3C,CAfiB;;AAAA;AAelC8D,sBAfkC;AAAA;AAAA,qBAkB5BF,SAAS,EAAEpG,qBAAF,EAAkBsC,SAASgE,SAASI,IAApC,EAAT,CAlB4B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBAoB5BN,SAAS,EAAEpG,wBAAF,EAAT,CApB4B;;AAAA;;AAsBlC0F,sBAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IACE5G,OAAO2H,KAAP,CACE,wFADF,CADF;;AAtBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AA8BA,IAAMC,8DAA2B,SAA3BA,wBAA2B;AAAA,SAAO,oBAAY;AACzDR,aAAS,EAAEpG,uCAAF,EAAoCsC,SAASW,GAA7C,EAAT;AACD,GAFuC;AAAA,CAAjC;;AAIA,IAAM4D,oDAAsB,SAAtBA,mBAAsB;AAAA,SAAO,oBAAY;AACpDT,aAAS,EAAEpG,sCAAF,EAAmCsC,SAASW,GAA5C,EAAT;AACD,GAFkC;AAAA,CAA5B;;AAIA,IAAM6D,oCAAc,SAAdA,WAAc;AAAA,SAAM,oBAAY;AAC3CV,aAAS,EAAEpG,yBAAF,EAAT;AACD,GAF0B;AAAA,CAApB;;AAIA,IAAM+G,oCAAc,SAAdA,WAAc;AAAA;AAAA,0DAAM,kBAAMX,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACzBN,QAAQ,EAAR,CADyB;;AAAA;AAE/BM,uBAAS,EAAEpG,yBAAF,EAAT;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAKA,IAAMgH,oCAAc,SAAdA,WAAc;AAAA;AAAA,0DAAM,kBAAMZ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACzBN,QAAQ,IAAR,CADyB;;AAAA;AAE/BM,uBAAS,EAAEpG,yBAAF,EAAT;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAKA,IAAMiH,kCAAa,SAAbA,UAAa;AAAA;AAAA,0DAAM,kBAAMb,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEtBA,SAASW,YAAYX,QAAZ,CAAT,CAFsB;;AAAA;AAAA;AAAA,qBAGtBN,QAAQ,GAAR,CAHsB;;AAAA;AAAA;AAAA,qBAItB9G,OAAOkI,KAAP,EAJsB;;AAAA;AAAA;AAAA,qBAKtBd,SAASY,YAAYZ,QAAZ,CAAT,CALsB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAO5BhH,sBAAQC,GAAR;;AAP4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAWA,IAAM8H,kCAAa,SAAbA,UAAa;AAAA,SAAM,oBAAY;AAC1Cf,aAAS,EAAEpG,wBAAF,EAAT;AACD,GAFyB;AAAA,CAAnB;;AAIP;;;;;AAKO,IAAMoH,0CAAiB,SAAjBA,cAAiB;AAAA;AAAA,0DAAM,kBAAOhB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEhCD,uBAAS;AACPpG;AADO,eAAT;AAGMF,mBAL0B,GAKlBuG,UALkB;AAM1BgB,oBAN0B,GAMjBvH,MAAMJ,IAAN,CAAW2C,WAAX,CAAuBiF,EANN;AAO1B9E,iBAP0B,GAOpB1C,MAAMJ,IAAN,CAAW8C,GAPS;AAQ1BK,sBAR0B,GAQf/C,MAAMK,KAAN,CAAY0C,QARG;AAS1BD,qBAT0B,GAShB9C,MAAMK,KAAN,CAAYyC,OATI;AAAA;AAAA,qBAWT,gBAAM2E,GAAN,CAClB9B,OADkB,gBACA4B,MADA,SACUzE,OADV,EAErB,EAAEC,UAAUA,QAAZ,EAFqB,EAGrB;AACE2D,yBAAS,EAAEC,eAAejE,GAAjB;AADX,eAHqB,CAXS;;AAAA;AAW1B8D,sBAX0B;;;AAmBhCF,uBAAS;AACPpG,+CADO;AAEPsC,yBAAS,IAAIkF,IAAJ,GAAWC,kBAAX;AAFF,eAAT;AAnBgC;AAAA;;AAAA;AAAA;AAAA;;AAwBhCrB,uBAAS;AACPpG,+CADO;AAEPsC;AAFO,eAAT;;AAxBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AA+BP;AACO,IAAMoF,0CAAiB,SAAjBA,cAAiB;AAAA;AAAA,0DAAM,kBAAOtB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BvG,mBAF0B,GAElBuG,UAFkB;AAG1BgB,oBAH0B,GAGjBvH,MAAMJ,IAAN,CAAW2C,WAAX,CAAuBiF,EAHN;AAI1B9E,iBAJ0B,GAIpB1C,MAAMJ,IAAN,CAAW8C,GAJS;AAAA;AAAA,qBAMT,gBAAM+D,IAAN,CAAcd,OAAd,gBAAgC4B,MAAhC,EAA0C;AAC/Db,yBAAS,EAAEC,eAAejE,GAAjB;AADsD,eAA1C,CANS;;AAAA;AAM1B8D,sBAN0B;AAAA;AAAA,qBAU1BF,SAAS,EAAEpG,6BAAF,EAA0BsC,SAASgE,SAASI,IAAT,CAAciB,GAAjD,EAAT,CAV0B;;AAAA;AAAA;AAAA,qBAW1BvB,SAAS,EAAEpG,6BAAF,EAAT,CAX0B;;AAAA;AAAA;AAAA,qBAY1BoG,SAAS,EAAEpG,oCAAF,EAAT,CAZ0B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAchCZ,sBAAQ8C,KAAR;;AAdgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAkBP;;;AAGO,IAAM0F,sDAAuB,SAAvBA,oBAAuB;AAAA;AAAA,0DAAM,kBAAOxB,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhCvG,mBAFgC,GAExBuG,UAFwB;AAGhCgB,oBAHgC,GAGvBvH,MAAMJ,IAAN,CAAW2C,WAAX,CAAuBiF,EAHA;AAIhC9E,iBAJgC,GAI1B1C,MAAMJ,IAAN,CAAW8C,GAJe;AAAA;AAAA,qBAMf,gBAAMqF,GAAN,CAAapC,OAAb,gBAA+B4B,MAA/B,EAAyC;AAC9Db,yBAAS,EAAEC,eAAejE,GAAjB;AADqD,eAAzC,CANe;;AAAA;AAMhC8D,sBANgC;AAShCwB,uBATgC,GASpBxB,SAASI,IAAT,CAAcxD,GAAd,CAAkB,yBAAiB;AACnD,oBAAMN,UAAUmF,cAAcJ,GAA9B;;AAEA;AACA,oBAAMK,aAAa,IAAIR,IAAJ,CAASO,cAAcE,SAAvB,CAAnB;;AAEA;AACA,oBAAMC,gBAAmBF,WAAWG,YAAX,EAAnB,SAAgDH,WAAWP,kBAAX,EAAtD;;AAEA,uBAAO;AACL7E,kCADK;AAELsF;AAFK,iBAAP;AAID,eAbiB,CAToB;AAAA;AAAA,qBAwBhC9B,SAAS,EAAEpG,wCAAF,EAAqCsC,SAASwF,SAA9C,EAAT,CAxBgC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA0BtC1I,sBAAQ8C,KAAR;;AA1BsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AA8BP;AACO,IAAMkG,gCAAY,SAAZA,SAAY;AAAA;AAAA,0DAAW,kBAAOhC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BvG,mBAF0B,GAElBuG,UAFkB;AAG1BgB,oBAH0B,GAGjBvH,MAAMJ,IAAN,CAAW2C,WAAX,CAAuBiF,EAHN;AAI1B9E,iBAJ0B,GAIpB1C,MAAMJ,IAAN,CAAW8C,GAJS;AAAA;AAAA,qBAMT,gBAAMqF,GAAN,CAAapC,OAAb,gBAA+B4B,MAA/B,SAAyCzE,OAAzC,EAAoD;AACzE4D,yBAAS,EAAEC,eAAejE,GAAjB;AADgE,eAApD,CANS;;AAAA;AAM1B8D,sBAN0B;AAAA;AAAA,qBAU1BF,SAAS,EAAEpG,6BAAF,EAA0BsC,SAASgE,SAASI,IAAT,CAAc7D,QAAjD,EAAT,CAV0B;;AAAA;AAAA;AAAA,qBAW1BuD,SAAS,EAAEpG,6BAAF,EAA0BsC,SAASM,OAAnC,EAAT,CAX0B;;AAAA;AAAA;AAAA,qBAY1BwD,SAAS,EAAEpG,oCAAF,EAAT,CAZ0B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAchCZ,sBAAQ8C,KAAR;;AAdgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAkBA,IAAMmG,sDAAuB,SAAvBA,oBAAuB;AAAA,SAAM,oBAAY;AACpDjC,aAAS,EAAEpG,oCAAF,EAAT;AACD,GAFmC;AAAA,CAA7B;;AAIP;AACO,IAAMsI,gCAAY,SAAZA,SAAY;AAAA,MAAGC,cAAH,SAAGA,cAAH;AAAA,MAAmBjE,QAAnB,SAAmBA,QAAnB;AAAA;AAAA,2DAAkC,kBAAM8B,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEjDA,SAAS,EAAEpG,0BAAF,EAAT,CAFiD;;AAAA;AAAA;AAAA,qBAIhC,gBAAMuG,IAAN,CAAcd,OAAd,qBAAuC;AAC5DpB,uBAAUkE,eAAeC,IAAf,EAAV,iBAD4D;AAE5DlE;AAF4D,eAAvC,CAJgC;;AAAA;AAIjDgC,sBAJiD;AAAA;AAAA,qBASjDF,SAAS;AACbpG,0CADa;AAEbsC,yBAAS;AACPC,wBAAM+D,SAASI,IAAT,CAAcnE,IADb;AAEPC,uBAAK8D,SAASI,IAAT,CAAc+B;AAFZ;AAFI,eAAT,CATiD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBnDC,2BAjBmD,GAiBnC5F,OAAO6F,IAAP,CAAY,aAAIrC,QAAJ,CAAaI,IAAzB,EAA+B,CAA/B,CAjBmC;AAAA,6BAmB/CgC,aAnB+C;AAAA,gDAoBhD,kBApBgD,yBA+BhD,cA/BgD,yBAyChD,eAzCgD,yBAmDhD,iBAnDgD;AAAA;;AAAA;AAqB7CE,8BArB6C,GAqB1B,EArB0B;;AAsBnD,2BAAItC,QAAJ,CAAaI,IAAb,CAAkBkC,gBAAlB,CAAmCC,OAAnC,CAA2C,iBAAS;AAClDD,iCAAiBE,IAAjB,CAAsB5G,MAAM6G,GAA5B;AACD,eAFD;AAtBmD;AAAA,qBAyB7C3C,SAAS,EAAEpG,0BAAF,EAAuBsC,SAASsG,gBAAhC,EAAT,CAzB6C;;AAAA;AAAA;AAAA,qBA0B7C9C,QAAQ,IAAR,CA1B6C;;AAAA;AAAA;AAAA,qBA2B7CM,SAAS,EAAEpG,gCAAF,EAAT,CA3B6C;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAgC7CoG,SAAS;AACbpG,0CADa;AAEbsC,yBAAS,aAAIgE,QAAJ,CAAaI,IAAb,CAAkBsC;AAFd,eAAT,CAhC6C;;AAAA;AAAA;AAAA,qBAoC7ClD,QAAQ,IAAR,CApC6C;;AAAA;AAAA;AAAA,qBAqC7CM,SAAS,EAAEpG,gCAAF,EAAT,CArC6C;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBA0C7CoG,SAAS;AACbpG,qDADa;AAEbsC,yBAAS,aAAIgE,QAAJ,CAAaI,IAAb,CAAkBuC;AAFd,eAAT,CA1C6C;;AAAA;AAAA;AAAA,qBA8C7CnD,QAAQ,IAAR,CA9C6C;;AAAA;AAAA;AAAA,qBA+C7CM,SAAS,EAAEpG,gCAAF,EAAT,CA/C6C;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAoD7CoG,SAAS;AACbpG,0CADa;AAEbsC,yBAAS,aAAIgE,QAAJ,CAAaI,IAAb,CAAkBwC;AAFd,eAAT,CApD6C;;AAAA;AAAA;AAAA,qBAwD7CpD,QAAQ,IAAR,CAxD6C;;AAAA;AAAA;AAAA,qBAyD7CM,SAAS,EAAEpG,gCAAF,EAAT,CAzD6C;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBA6D7CoG,SAAS;AACbpG,0CADa;AAEbsC,yBAAS;AAFI,eAAT,CA7D6C;;AAAA;AAAA;AAAA,qBAiE7CwD,QAAQ,IAAR,CAjE6C;;AAAA;AAAA;AAAA,qBAkE7CM,SAAS,EAAEpG,gCAAF,EAAT,CAlE6C;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAyEA,IAAM6E,sCAAe,SAAfA,YAAe;AAAA,MAC1BV,SAD0B,UAC1BA,SAD0B;AAAA,MAE1BC,QAF0B,UAE1BA,QAF0B;AAAA,MAG1BE,QAH0B,UAG1BA,QAH0B;AAAA,MAI1BiE,cAJ0B,UAI1BA,cAJ0B;AAAA,MAK1BY,WAL0B,UAK1BA,WAL0B;AAAA;AAAA,2DAMtB,mBAAM/C,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEFA,uBAAS,EAAEpG,6BAAF,EAAT;AAFE;AAAA,qBAGI,gBAAMuG,IAAN,CAAcd,OAAd,aAA+B;AACnCtB,oCADmC;AAEnCC,kCAFmC;AAGnCE,kCAHmC;AAInCiE,8CAJmC;AAKnCY;AALmC,eAA/B,CAHJ;;AAAA;;AAWF/C,uBAAS;AACPpG,6CADO;AAEPsC,yBACE;AAHK,eAAT;AAXE;AAAA,qBAgBIwD,QAAQ,IAAR,CAhBJ;;AAAA;AAiBFM,uBAAS,EAAEpG,gCAAF,EAAT;AAjBE;AAAA;;AAAA;AAAA;AAAA;AAmBI0I,2BAnBJ,GAmBoB5F,OAAO6F,IAAP,CAAY,cAAMrC,QAAN,CAAeI,IAA3B,EAAiC,CAAjC,CAnBpB;AAAA,8BAoBMgC,aApBN;AAAA,kDAsBK,SAtBL,0BA+BK,UA/BL;AAAA;;AAAA;AAuBEtC,uBAAS;AACPpG,6CADO;AAEPsC,yBAAS,cAAMgE,QAAN,CAAeI,IAAf,CAAoBvE;AAFtB,eAAT;AAvBF;AAAA,qBA2BQ2D,QAAQ,IAAR,CA3BR;;AAAA;AA4BEM,uBAAS,EAAEpG,gCAAF,EAAT;AA5BF;;AAAA;AAgCEoG,uBAAS;AACPpG,6CADO;AAEPsC,yBAAS,cAAMgE,QAAN,CAAeI,IAAf,CAAoB0C,QAApB,CAA6B,CAA7B,EAAgCL;AAFlC,eAAT;AAhCF;AAAA,qBAoCQjD,QAAQ,IAAR,CApCR;;AAAA;AAqCEM,uBAAS,EAAEpG,gCAAF,EAAT;AArCF;;AAAA;AAwCEoG,uBAAS;AACPpG,6CADO;AAEPsC,yBAAS;AAFF,eAAT;AAxCF;AAAA,qBA4CQwD,QAAQ,IAAR,CA5CR;;AAAA;AA6CEM,uBAAS,EAAEpG,gCAAF,EAAT;AA7CF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANsB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAyDA,IAAMqJ,kCAAa,SAAbA,UAAa;AAAA,SAAS,oBAAY;AAC7CjD,aAAS,EAAEpG,wBAAF,EAAqBsC,SAASJ,SAAS,EAAvC,EAAT;AACD,GAFyB;AAAA,CAAnB;;AAIA,IAAMoH,0DAAyB,SAAzBA,sBAAyB;AAAA,MAAGjF,KAAH,UAAGA,KAAH;AAAA;AAAA,2DAAe,mBAAM+B,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE1B,gBAAMG,IAAN,CAAcd,OAAd,6BAA+C;AACpEpB;AADoE,eAA/C,CAF0B;;AAAA;AAE3CiC,sBAF2C;AAAA;AAAA,qBAK3CF,SAAS;AACbpG,oDADa;AAEbsC,yBAASgE,SAASI,IAAT,CAAcvE;AAFV,eAAT,CAL2C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAUjD/C,sBAAQ8C,KAAR;;AAViD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAf;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAcA,IAAMqH,wCAAgB,SAAhBA,aAAgB,CAACd,KAAD;AAAA,MAAUnE,QAAV,UAAUA,QAAV;AAAA;AAAA,2DAAyB,mBAAM8B,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE3B,gBAAMG,IAAN,CAClBd,OADkB,8BACcgD,KADd,EAErB,EAAEnE,kBAAF,EAFqB,CAF2B;;AAAA;AAE5CgC,sBAF4C;AAAA;AAAA,qBAO5CF,SAAS;AACbpG,mDADa;AAEbsC,yBAASgE,SAASI,IAAT,CAAcvE;AAFV,eAAT,CAP4C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAYlD/C,sBAAQ8C,KAAR;;AAZkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAgBA,IAAMsH,sCAAe,SAAfA,YAAe;AAAA;AAAA,2DAAS,mBAAMpD,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEV,gBAAMG,IAAN,CAAcd,OAAd,4BAA4CgD,KAA5C,CAFU;;AAAA;AAE3BnC,sBAF2B;AAAA;AAAA,qBAG3BF,SAAS;AACbpG,0CADa;AAEbsC,yBAAS;AACPC,wBAAM+D,SAASI,IAAT,CAAcnE,IADb;AAEPC,uBAAK8D,SAASI,IAAT,CAAclE;AAFZ;AAFI,eAAT,CAH2B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWjCpD,sBAAQ8C,KAAR;;AAXiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;;;;;;;;;ACnYP;;;;AACA;;AAEA;;;;AAEA,IAAMuH,WAAW,SAAXA,QAAW;AAAA,SAAUjG,QAAQrE,SAAR,GAAoB,UAA9B;AAAA,CAAjB;;AAEA,IAAMuK,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAQnF,KAAR;AAAA,SAClB,oDACMmF,MAAMxE,KADZ;AAEE,kBAAa,KAFf;AAGE,UAAMwE,MAAM3J,IAHd;AAIE,eAAW2J,MAAMxE,KAAN,CAAY3B,KAAZ,KAAsB,EAAtB,GAA2B,EAA3B,GAAgC;AAJ7C,KADkB;AAAA,CAApB;;AAQA,IAAMoG,QAAQ,SAARA,KAAQ;AAAA,SACZ;AAAA;AAAA,MAAK,WAAU,eAAf;AACE;AACE,YAAMpF,MAAME,IAAN,IAAc,OADtB;AAEE,iBAAWgF,WAFb;AAGE,YAAMlF,MAAMxE,IAHd;AAIE,gBAAUyJ;AAJZ,MADF;AAOE;AAAA;AAAA,QAAO,WAAU,gBAAjB,EAAkC,SAASjF,MAAME,IAAjD;AACGF,YAAMG;AADT,KAPF;AAUE,4CAAM,WAAU,cAAhB;AAVF,GADY;AAAA,CAAd;;kBAceiF;;;;;;;;;;;;;AC7Bf;;;;AACA;;;;AAEA,IAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA,MAAGpH,OAAH,QAAGA,OAAH;AAAA,MAAYN,OAAZ,QAAYA,OAAZ;AAAA,SACvB;AAAA;AAAA,MAAK,IAAG,mBAAR,EAA4B,WAAWM,UAAU,MAAV,GAAmB,MAA1D;AACE,4CAAM,WAAU,uBAAhB,GADF;AAEE;AAAA;AAAA;AAAIN;AAAJ;AAFF,GADuB;AAAA,CAAzB;;kBAOe0H;;;;;;;;;;;;;;;;;;;;;ACVf;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEA,IAAMlK,OAAO,0BAAU;AACrBA,QAAM;AADe,CAAV,CAAb;;IAIamK,gBAAAA;;;AACX,iBAAYtF,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAEjB,UAAK1E,KAAL,GAAa;AACXiK,mBAAa,CACX;AACErF,cAAM,gBADR;AAEE1E,cAAM,MAFR;AAGE2E,eAAO;AAHT,OADW,EAMX;AACED,cAAM,UADR;AAEE1E,cAAM,UAFR;AAGE2E,eAAO;AAHT,OANW;AADF,KAAb;AAFiB;AAgBlB;;kBACDC,6CAAiBV,WAAW;AAC1B,SAAKM,KAAL,CAAW8D,SAAX,CAAqBpE,SAArB;AACD;;kBACDY,qCAAc;AACZ,QAAI,KAAKN,KAAL,CAAWO,YAAf,EAA6B;AAC3B,aACE;AAAA;AAAA,UAAK,WAAU,eAAf;AACE;AAAA;AAAA;AAAI,eAAKP,KAAL,CAAWO;AAAf;AADF,OADF;AAKD;AACF;;kBACDzF,2BAAS;AAAA,iBACkC,KAAKkF,KADvC;AAAA,QACCQ,YADD,UACCA,YADD;AAAA,QACeC,KADf,UACeA,KADf;AAAA,QACsBxC,OADtB,UACsBA,OADtB;;;AAGP,QAAMyC,aAAa,KAAKpF,KAAL,CAAWiK,WAAX,CAAuB7G,GAAvB,CAA2B,UAACiC,KAAD,EAAQC,KAAR;AAAA,aAC5C,8DAAO,KAAKA,KAAZ,IAAuBD,KAAvB,EAD4C;AAAA,KAA3B,CAAnB;;AAIA,QAAMxF,OACJ;AAAA;AAAA,QAAS,IAAG,eAAZ;AACE;AACE,iBAAS8C,OADX;AAEE,iBAAS;AAFX,QADF;AAKE;AAAA;AAAA,UAAK,WAAU,kBAAf;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAAA;AAAA,SADF;AAIE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAAA;AAAA;AAJF,OALF;AAaG,WAAKqC,WAAL,EAbH;AAcE;AAAA;AAAA,UAAK,IAAG,YAAR,EAAqB,WAAWrC,UAAU,MAAV,GAAmB,MAAnD;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAM,UAAUuC,aAAa,KAAKJ,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B,CAAb,CAAhB;AACGH,oBADH;AAEE;AAAA;AAAA,cAAQ,MAAK,QAAb,EAAsB,UAAU,CAACD,KAAjC;AAAA;AAAA,WAFF;AAKE;AAAA;AAAA,cAAM,IAAG,kBAAT;AAAA;AAAA,WALF;AAME;AAAA;AAAA,cAAM,IAAG,UAAT;AAAA;AAAA,WANF;AAOE;AAAA;AAAA;AAAA;AAAA;AAPF;AAFF;AAdF,KADF;AA6BA;AACA,WAAO,KAAKT,KAAL,CAAWpC,aAAX,GAA2B,0DAAU,IAAG,YAAb,GAA3B,GAA0DzC,IAAjE;AACD;;;EApEwB,gBAAM2F;;AAuEjC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChC9C,aAAS3C,MAAMJ,IAAN,CAAW+C,OADY;AAEhCsC,kBAAcjF,MAAMJ,IAAN,CAAWwC,KAFO;AAGhCC,aAASrC,MAAMJ,IAAN,CAAWyC,OAHY;AAIhCC,mBAAetC,MAAMJ,IAAN,CAAW0C;AAJM,GAAV;AAAA,CAAxB;;kBAOe,gCAAW,yBAAQmD,eAAR,EAAyB,EAAE+C,6BAAF,EAAzB,EAAwC3I,KAAKmK,KAAL,CAAxC,CAAX;;;;;;;;;;;;;;AC5Ff;;;;AACA;;AACA;;IAAYE;;AACZ;;;;;;;;;;;;IAEaC,iBAAAA;;;;;;;;;mBACXC,mDAAqB;AACnB,SAAK1F,KAAL,CAAW6E,UAAX;AACD;;mBAED/J,2BAAS;AACP,WACE;AAAA;AAAA;AACE,gEAAU,IAAG,GAAb,GADF;AAAA;AAAA,KADF;AAKD;;;EAXyB,gBAAMgG;;kBAcnB,gCAAW,yBAAQ,IAAR,EAAc0E,OAAd,EAAuBC,MAAvB,CAAX;;;;;;;;;;;ACnBf;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;AAEA,IAAMtK,OAAO,0BAAU;AACrBA,QAAM;AADe,CAAV,CAAb;;IAIawK,yBAAAA;;;AACX,0BAAY3F,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAEjB,UAAK1E,KAAL,GAAa;AACXsK,cAAQ,CACN;AACE1F,cAAM,gBADR;AAEE1E,cAAM,MAFR;AAGE2E,eAAO;AAHT,OADM;AADG,KAAb;AAFiB;AAWlB;;2BACDC,6CAAiBV,WAAW;AAC1B,SAAKM,KAAL,CAAW8E,sBAAX,CAAkCpF,SAAlC;AACD;;2BACDY,qCAAc;AACZ,QAAI,KAAKN,KAAL,CAAWO,YAAf,EAA6B;AAC3B,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAAA;AAC2B,eAAKP,KAAL,CAAWO;AADtC;AADF,OADF;AAOD;AACF;;2BACDzF,2BAAS;AAAA,QACC0F,YADD,GACkB,KAAKR,KADvB,CACCQ,YADD;;;AAGP,QAAME,aAAa,KAAKpF,KAAL,CAAWsK,MAAX,CAAkBlH,GAAlB,CAAsB,UAACiC,KAAD,EAAQC,KAAR;AAAA,aACvC,8DAAO,KAAKA,KAAZ,IAAuBD,KAAvB,EADuC;AAAA,KAAtB,CAAnB;;AAIA,WACE;AAAA;AAAA,QAAS,IAAG,yBAAZ;AACE;AAAA;AAAA,UAAK,IAAG,sBAAR;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAM,UAAUH,aAAa,KAAKJ,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B,CAAb,CAAhB;AACG,eAAKP,WAAL,EADH;AAEGI,oBAFH;AAGE;AAAA;AAAA,cAAQ,MAAK,QAAb;AAAA;AAAA;AAHF;AAFF;AADF,KADF;AAYD;;;EA9CiC,gBAAMI;;AAiD1C,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCR,kBAAcjF,MAAMJ,IAAN,CAAWwC,KADO;AAEhCC,aAASrC,MAAMJ,IAAN,CAAWyC,OAFY;AAGhCC,mBAAetC,MAAMJ,IAAN,CAAW0C;AAHM,GAAV;AAAA,CAAxB;;kBAMe,gCACb,yBAAQmD,eAAR,EAAyB,EAAE+D,qDAAF,EAAzB,EAAqD3J,KAAKwK,cAAL,CAArD,CADa;;;;;;;;;;;;;;;;ACtEf;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;AAEA;;;;;;;;;;AAEA,IAAMxK,OAAO,0BAAU;AACrBA,QAAM,eADe;AAErBqE;AAFqB,CAAV,CAAb;;AAKO,IAAMA,8BAAW,SAAXA,QAAW,YAAa;AACnC,MAAMC,SAAS,EAAf;;AAEA,MAAI,CAACC,UAAUI,QAAf,EAAyB;AACvBL,WAAOK,QAAP,GAAkB,6BAAlB;AACD;;AAED,MAAI,CAACJ,UAAUmG,eAAf,EAAgC;AAC9BpG,WAAOoG,eAAP,GAAyB,6BAAzB;AACD;;AAED,MAAInG,UAAUI,QAAV,KAAuBJ,UAAUmG,eAArC,EAAsD;AACpDpG,WAAOK,QAAP,GAAkB,sBAAlB;AACD;;AAED,SAAOL,MAAP;AACD,CAhBM;;IAkBMqG,wBAAAA;;;AACX,yBAAY9F,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAEjB,UAAK1E,KAAL,GAAa;AACXsK,cAAQ,CACN;AACE1F,cAAM,UADR;AAEE1E,cAAM,UAFR;AAGE2E,eAAO;AAHT,OADM,EAMN;AACED,cAAM,iBADR;AAEE1E,cAAM,UAFR;AAGE2E,eAAO;AAHT,OANM;AADG,KAAb;AAFiB;AAgBlB;;0BACDuF,mDAAqB;AACnB,QAAI,KAAK1F,KAAL,CAAWpC,aAAf,EAA8B;AAC5B,WAAKoC,KAAL,CAAW+F,OAAX,CAAmBzB,IAAnB,CAAwB,YAAxB;AACD;AACF;;0BACD0B,mDAAoBC,WAAW;AAC7B,QAAIA,UAAUrI,aAAd,EAA6B;AAC3B,WAAKoC,KAAL,CAAW+F,OAAX,CAAmBzB,IAAnB,CAAwB,YAAxB;AACD;AACF;;0BACDlE,mDAA+BV,WAAW;AAAA,QAAvBI,QAAuB,QAAvBA,QAAuB;;AACxC,QAAMoG,aAAa,KAAKlG,KAAL,CAAWmG,KAAX,CAAiBC,MAAjB,CAAwBF,UAA3C;AACA,SAAKlG,KAAL,CAAW+E,aAAX,CAAyBmB,UAAzB,EAAqC,EAAEpG,kBAAF,EAArC;AACD;;0BACDQ,qCAAc;AACZ,QAAI,KAAKN,KAAL,CAAWO,YAAf,EAA6B;AAC3B,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEG,aAAKP,KAAL,CAAWO;AAFd,OADF;AAMD,KAPD,MAOO,IAAI,KAAKP,KAAL,CAAWrC,OAAf,EAAwB;AAC7B,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEG,aAAKqC,KAAL,CAAWrC;AAFd,OADF;AAMD;AACF;;0BACD7C,2BAAS;AAAA,QACC0F,YADD,GACkB,KAAKR,KADvB,CACCQ,YADD;;;AAGP,QAAME,aAAa,KAAKpF,KAAL,CAAWsK,MAAX,CAAkBlH,GAAlB,CAAsB,UAACiC,KAAD,EAAQC,KAAR;AAAA,aACvC,8DAAO,KAAKA,KAAZ,IAAuBD,KAAvB,EADuC;AAAA,KAAtB,CAAnB;;AAIA,WACE;AAAA;AAAA,QAAS,IAAG,wBAAZ;AACE;AAAA;AAAA,UAAK,IAAG,qBAAR;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAM,UAAUH,aAAa,KAAKJ,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B,CAAb,CAAhB;AACG,eAAKP,WAAL,EADH;AAEGI,oBAFH;AAGE;AAAA;AAAA,cAAQ,QAAO,QAAf;AAAA;AAAA;AAHF;AAFF;AADF,KADF;AAYD;;;EApEgC,gBAAMI;;AAuEzC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCR,kBAAcjF,MAAMJ,IAAN,CAAWwC,KADO;AAEhCC,aAASrC,MAAMJ,IAAN,CAAWmL;AAFY,GAAV;AAAA,CAAxB;;kBAKe,gCACb,yBAAQtF,eAAR,EAAyB,EAAEgE,mCAAF,EAAzB,EAA4C5J,KAAK2K,aAAL,CAA5C,CADa;;;;;;;;;;;;;;AC9Gf;;;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;IAEaQ,sBAAAA;;;;;;;;;wBACXC,iDAAoB;AAClB,QAAMC,mBAAmB,KAAKxG,KAAL,CAAWmG,KAAX,CAAiBC,MAAjB,CAAwBK,WAAjD;AACA,SAAKzG,KAAL,CAAWgF,YAAX,CAAwBwB,gBAAxB;AACD;;wBAEDE,2CAAiB;AACf,SAAK1G,KAAL,CAAW+F,OAAX,CAAmBzB,IAAnB,CAAwB,YAAxB;AACD;;wBACDxJ,2BAAS;AAAA;;AACP,WACE;AAAA;AAAA,QAAS,IAAG,uBAAZ;AACE;AAAA;AAAA,UAAK,IAAG,oBAAR;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAQ,SAAS;AAAA,qBAAM,OAAK4L,cAAL,EAAN;AAAA,aAAjB;AAAA;AAAA;AAFF;AADF,KADF;AAQD;;;EAlB8B,gBAAM5F;;AAqBvC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChC;AADgC,GAAV;AAAA,CAAxB;;kBAIe,gCACb,yBAAQA,eAAR,EAAyB,EAAEiE,iCAAF,EAAzB,EAA2CsB,WAA3C,CADa;;;;;;;;;;;;;AChCf;;;;AACA;;AACA;;;;AAEA,IAAMK,eAAe,SAAfA,YAAe;AAAA,SACnB;AACE,YAAQ;AAAA,UAAGZ,OAAH,QAAGA,OAAH;AAAA,aACN;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,SAAQ,aAAb;AACE;AAAA;AAAA,cAAQ,IAAG,QAAX;AACE;AAAA;AAAA,gBAAM,YAAW,QAAjB,EAA0B,GAAE,KAA5B,EAAkC,GAAE,KAApC,EAA0C,IAAG,OAA7C;AAAA;AAAA;AADF,WADF;AAME,iDAAK,WAAU,MAAf,EAAsB,WAAU,SAAhC,GANF;AAOE,iDAAK,WAAU,MAAf,EAAsB,WAAU,SAAhC,GAPF;AAQE,iDAAK,WAAU,MAAf,EAAsB,WAAU,SAAhC,GARF;AASE,iDAAK,WAAU,MAAf,EAAsB,WAAU,SAAhC,GATF;AAUE,iDAAK,WAAU,MAAf,EAAsB,WAAU,SAAhC;AAVF,SADF;AAcE;AAAA;AAAA,YAAQ,IAAG,QAAX,EAAoB,SAAS;AAAA,qBAAMA,QAAQzB,IAAR,CAAa,YAAb,CAAN;AAAA,aAA7B;AAAA;AAAA;AAdF,OADM;AAAA;AADV,IADmB;AAAA,CAArB;;kBAuBeqC;;;;;;;;;;;;;;AC3Bf;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBC;;;AACnB,uBAAY5G,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAEjB,UAAK1E,KAAL,GAAa;AACXuL,kBAAY,CACV;AACE3G,cAAM,YADR;AAEE4G,cAAM;AAFR,OADU,EAKV;AACE5G,cAAM,SADR;AAEE4G,cAAM;AAFR,OALU,EASV;AACE5G,cAAM,8BADR;AAEE4G,cAAM;AAFR,OATU,CADD;AAeXC,gBAAU,CACR;AACE7G,cAAM,QADR;AAEE8G,qCAFF;AAGEC,cAAM;AAHR,OADQ,EAMR;AACE/G,cAAM,UADR;AAEE8G,sCAFF;AAGEC,cAAM;AAHR,OANQ,EAWR;AACE/G,cAAM,MADR;AAEE8G,qCAFF;AAGEC,cAAM;AAHR,OAXQ,EAgBR;AACE/G,cAAM,MADR;AAEE8G,qCAFF;AAGEC,cAAM;AAHR,OAhBQ;AAfC,KAAb;AAFiB;AAwClB;;wBACDnM,2BAAS;AACP,WACE;AAAA;AAAA,QAAK,WAAU,cAAf;AACE,6DADF;AAEE,4DAAY,UAAU,KAAKQ,KAAL,CAAWyL,QAAjC,GAFF;AAGE,iEAHF;AAIE,wDAAQ,YAAY,KAAKzL,KAAL,CAAWuL,UAA/B;AAJF,KADF;AAQD;;;EAnDsC,gBAAM/F;;kBAA1B8F;;;;;;;;ACZrB;;;;AACA;;AAEA;;;;AAEA,IAAMM,WAAW,SAAXA,QAAW;AAAA,SACf;AAAA;AAAA,MAAS,IAAG,UAAZ;AACE;AAAA;AAAA,QAAK,WAAU,kBAAf;AACE;AAAA;AAAA,UAAM,IAAG,gBAAT,EAA0B,IAAG,UAA7B;AACE;AAAA;AAAA,YAAQ,IAAG,YAAX;AAAA;AAAA;AADF,OADF;AAKE;AAAA;AAAA,UAAM,IAAG,gBAAT,EAA0B,IAAG,UAA7B;AACE;AAAA;AAAA,YAAQ,IAAG,YAAX;AAAA;AAAA;AADF;AALF,KADF;AAUE,2CAAK,WAAU,UAAf,GAVF;AAWE;AAAA;AAAA,QAAK,WAAU,cAAf;AACE;AAAA;AAAA;AAAA;AAAA,OADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AAXF,GADe;AAAA,CAAjB;;kBAsBeA;;;;;;;;;;;;;;;AC3Bf;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,aAAa,SAAbA,UAAa,QAAS;AAC1B,MAAMC,WAAWpH,MAAM+G,QAAN,CAAerI,GAAf,CAAmB,UAAC2I,IAAD,EAAOzG,KAAP;AAAA,WAClC,4DAAM,KAAKA,KAAX,IAAsByG,IAAtB,EADkC;AAAA,GAAnB,CAAjB;AAGA,SACE;AAAA;AAAA,MAAS,IAAG,aAAZ;AACE;AAAA;AAAA,QAAK,WAAU,gBAAf;AACGD;AADH;AADF,GADF;AAOD,CAXD;;kBAaeD;;;;;;;;;;;;;ACtBf;;;;AACA;;;;AAEA,IAAMG,OAAO,SAAPA,IAAO;AAAA,SACX;AAAA;AAAA,MAAK,WAAU,UAAf;AACE,2CAAK,KAAKtH,MAAMgH,GAAhB,EAAqB,KAAKhH,MAAME,IAAN,GAAa,OAAvC,GADF;AAEE;AAAA;AAAA;AACGF,YAAME;AADT,KAFF;AAKE;AAAA;AAAA;AACGF,YAAMiH;AADT;AALF,GADW;AAAA,CAAb;;kBAWeK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdf;;;;AACA;;;;AAEA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SACnB;AAAA;AAAA,MAAS,IAAG,eAAZ;AACE;AAAA;AAAA;AAAA;AAAA,KADF;AAEE;AAAA;AAAA;AAAA;AAAA,KAFF;AAME;AAAA;AAAA;AAAA;AAAA,KANF;AAeE;AAAA;AAAA;AAAA;AAAA,KAfF;AAsBE;AAAA;AAAA;AAAA;AAAA,KAtBF;AA8BE;AAAA;AAAA;AAAA;AAAA;AA9BF,GADmB;AAAA,CAArB;;kBAuCeA;;;;;;;;;;;;;AC1Cf;;;;AACA;;AAEA;;;;AAEA,IAAMC,SAAS,SAATA,MAAS,QAAS;AACtB,SACE;AAAA;AAAA;AACE;AAAA;AAAA;AACGxH,YAAM6G,UAAN,CAAiBnI,GAAjB,CACC,UAACwD,IAAD,EAAOtB,KAAP;AAAA,eACEA,UAAU,CAAV,GACE;AAAA;AAAA,YAAI,KAAKA,KAAT;AACE;AAAA;AAAA,cAAG,MAAMsB,KAAK4E,IAAd,EAAoB,QAAO,QAA3B;AACG5E,iBAAKhC;AADR;AADF,SADF,GAOE;AAAA;AAAA,YAAI,KAAKU,KAAT;AACE;AAAA;AAAA,cAAM,IAAIsB,KAAK4E,IAAf;AAAsB5E,iBAAKhC;AAA3B;AADF,SARJ;AAAA,OADD,CADH;AAeE;AAAA;AAAA;AACE;AAAA;AAAA,YAAG,MAAK,8BAAR,EAAuC,QAAO,QAA9C;AAAA;AAAA;AADF;AAfF;AADF,GADF;AAyBD,CA1BD;;kBA4BesH;;;;;;;;;;;;;;;;ACjCf;;;;AACA;;AACA;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AASA;;;;;;;;;;AAhBA;;;IAkBaC,oBAAAA;;;;;;;;;sBACXlB,iDAAoB;AAAA;;AAClB/E,eAAW,YAAM;AACf;AACA,aAAKxB,KAAL,CAAWoD,oBAAX;AACD,KAHD,EAGG,IAHH;AAID;;sBACD4C,qDAAsB;AAAA;;AACpB;AACA,SAAKhG,KAAL,CAAW5B,OAAX,IACEsJ,YAAY;AAAA,aAAM,OAAK1H,KAAL,CAAW4C,cAAX,EAAN;AAAA,KAAZ,EAA+C,MAA/C,CADF;AAED;;sBAED9H,2BAAS;AAAA,iBAC0B,KAAKkF,KAD/B;AAAA,QACDZ,SADC,UACDA,SADC;AAAA,QACUvB,WADV,UACUA,WADV;;;AAGP,QAAI8J,cAAJ;AACA,QAAIvI,SAAJ,EAAe;AACbuI,cAAQ,yDAAR;AACD;AACD,WACE;AAAA;AAAA,QAAK,IAAG,mBAAR;AACGA,WADH;AAEE,iEAAiB,UAAU9J,WAA3B,GAFF;AAGE;AAAA;AAAA,UAAK,IAAG,mBAAR;AACE;AACE,mBAAS,KAAKmC,KAAL,CAAW5B,OADtB;AAEE,gCAAsB,KAAK4B,KAAL,CAAW6D,oBAFnC;AAGE,0BAAgB,KAAK7D,KAAL,CAAW4C,cAH7B;AAIE,uBAAa,KAAK5C,KAAL,CAAWsC,WAJ1B;AAKE,sBAAY,KAAKtC,KAAL,CAAWyC,UALzB;AAME,sBAAY,KAAKzC,KAAL,CAAW2C;AANzB,UADF;AASE;AAAA;AAAA,YAAS,IAAG,iBAAZ;AACE,kEADF;AAEE;AAFF;AATF;AAHF,KADF;AAoBD;;;EAxC4B,gBAAM7B;;AA2CrC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCtD,aAASnC,MAAMJ,IAAN,CAAWuC,OADY;AAEhCI,iBAAavC,MAAMJ,IAAN,CAAW2C,WAFQ;AAGhCuB,eAAW9D,MAAMK,KAAN,CAAYyD,SAHS;AAIhChB,aAAS9C,MAAMK,KAAN,CAAYyC;AAJW,GAAV;AAAA,CAAxB;;kBAOe,gCACb,yBAAQ2C,eAAR;AACE6B,uCADF;AAEEQ,mDAFF;AAGEd,iCAHF;AAIEG,+BAJF;AAKEE;AALF,gEAOEkB,oBAPF,2CAQG4D,SARH,CADa;;;;;;;;;ACxEf;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;;AAEA,IAAMtM,OAAO,0BAAU;AACrBA,QAAM;AADe,CAAV,CAAb;;IAIayM,oBAAAA;;;;;;;;;;;;wJACXC,eAAe,UAACC,CAAD,EAAI9H,KAAJ,EAAc;AAAA,wBACa,MAAKA,KADlB;AAAA,UACnB2B,iBADmB,eACnBA,iBADmB;AAAA,UACAC,QADA,eACAA,QADA;;AAE3B,UAAMmG,aAAaD,EAAEE,aAAF,CAAgBhJ,KAAnC;;AAEA,UAAI,CAACiJ,MAAMC,OAAOH,UAAP,CAAN,CAAD,IAA8BA,WAAWI,MAAX,KAAsB,EAAxD,EAA4D;AAC1D;AACAxG,0BAAkB,EAAElD,KAAKsJ,WAAWK,QAAX,EAAP,EAAlB;AACD,OAHD,MAGO,IAAIH,MAAMC,OAAOH,UAAP,CAAN,CAAJ,EAA+B;AACpC;AACAvG,mBAAW;AAAA,iBAAMI,SAAS,EAAEpG,wBAAF,EAAT,CAAN;AAAA,SAAX,EAAkD,EAAlD;AACA2G;AACD;AACF;;;sBAEDrH,2BAAS;AAAA;;AAAA,iBAOH,KAAKkF,KAPF;AAAA,QAEL5B,OAFK,UAELA,OAFK;AAAA,QAGLoC,YAHK,UAGLA,YAHK;AAAA,QAILvC,OAJK,UAILA,OAJK;AAAA,QAKLE,aALK,UAKLA,aALK;AAAA,QAMLD,eANK,UAMLA,eANK;;;AASP,WACE;AAAA;AAAA,QAAS,IAAG,gBAAZ;AACE;AAAA;AAAA,UAAK,IAAG,iBAAR;AACGD,kBACC,mDAAkB,SAASA,OAA3B,EAAoC,SAAS,WAA7C,GADD,GAGC;AAAA;AAAA;AAAA;AAAmBE;AAAnB;AAJJ,OADF;AAQE;AAAA;AAAA,UAAM,UAAUqC,YAAhB;AACE;AAAA;AAAA,YAAK,WAAU,aAAf;AACE;AACE,gBAAG,UADL;AAEE,sBAAU;AAAA,qBAAK,OAAKqH,YAAL,CAAkBC,CAAlB,CAAL;AAAA,aAFZ;AAGE,0BAAa,OAHf;AAIE,kBAAK,KAJP;AAKE,uBAAU,OALZ;AAME,yBAAY,KANd;AAOE,kBAAK;AACL;AARF,cASE,UAAU1J,UAAU,KAAV,GAAkB;AAT9B;AADF;AADF,OARF;AAuBE;AAAA;AAAA,UAAK,IAAG,mBAAR;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAG,WAAU,KAAb;AAAA;AAAyBF;AAAzB;AAFF;AAvBF,KADF;AA8BD;;;EAtD4B,gBAAM4C;;AAyDrC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChC1C,cAAU/C,MAAMK,KAAN,CAAY0C,QADU;AAEhCD,aAAS9C,MAAMK,KAAN,CAAYyC,OAFW;AAGhCD,mBAAe7C,MAAMK,KAAN,CAAYwC,aAHK;AAIhCD,qBAAiB5C,MAAMK,KAAN,CAAYuC,eAJG;AAKhCD,aAAS3C,MAAMJ,IAAN,CAAW+C;AALY,GAAV;AAAA,CAAxB;;kBAQe,gCACb,yBAAQ8C,eAAR,EAAyB;AACvBY;AADuB,CAAzB,EAEGxG,KAAKyM,SAAL,CAFH,CADa;;;;;;;;;;;;;;AC/Ef;;;;AACA;;AACA;;AACA;;;;AACA;;AAMA;;;;;;;;;;;;IAEaS,uBAAAA;;;;;;;;;yBACXC,iCAAW7J,KAAK;AACd,SAAKuB,KAAL,CAAWqC,mBAAX,CAA+B5D,GAA/B;AACD;;yBAED8J,+CAAkB9J,KAAK;AACrB,SAAKuB,KAAL,CAAWoC,wBAAX,CAAoC3D,GAApC;AACD;;yBACD3D,2BAAS;AAAA;;AAAA,iBACwB,KAAKkF,KAD7B;AAAA,QACC3B,QADD,UACCA,QADD;AAAA,QACWc,QADX,UACWA,QADX;;;AAGP,QAAMqJ,UAAU,CACd;AACEC,cAAQ,qBADV;AAEED,eAAS,CACP;AACEC,gBAAQ,YADV;AAEEC,kBAAU,cAFZ;AAGEC,kBAAU,GAHZ;AAIEC,cAAM;AAAA,iBAAY5I,MAAM6I,GAAN,CAAUC,YAAtB,WAAwC9I,MAAM6I,GAAN,CAAUE,UAAlD;AAAA;AAJR,OADO,EAOP;AACEN,gBAAQ,YADV;AAEEC,kBAAU,YAFZ;AAGEM,cAAM;AAHR,OAPO,EAYP;AACEP,gBAAQ,OADV;AAEEC,kBAAU,SAFZ;AAGEC,kBAAU;AAHZ,OAZO,EAiBP;AACEF,gBAAQ,KADV;AAEEC,kBAAU,KAFZ;AAGEC,kBAAU;AAHZ,OAjBO,EAsBP;AACEF,gBAAQ,cADV;AAEEC,kBAAU;AAFZ,OAtBO,EA0BP;AACED,gBAAQ,MADV;AAEEC,kBAAU,MAFZ;AAGEC,kBAAU;AAHZ,OA1BO,EA+BP;AACEF,gBAAQ,KADV;AAEEC,kBAAU,KAFZ;AAGEC,kBAAU;AAHZ,OA/BO,EAoCP;AACEF,gBAAQ,UADV;AAEEC,kBAAU,UAFZ;AAGEC,kBAAU;AAHZ,OApCO;AAFX,KADc,EA8Cd;AACEF,cAAQ,SADV;AAEED,eAAS,CACP;AACEC,gBAAQ,QADV;AAEEQ,oBAAY,KAFd;AAGE;AACAD,cAAM,CAAC7J,QAJT;AAKEyJ,cAAM;AAAA,iBACJ;AAAA;AAAA;AACE,yBAAU,YADZ;AAEE,uBAAS;AAAA,uBAAM,OAAKN,UAAL,CAAgBtI,MAAM6I,GAAN,CAAUpK,GAA1B,CAAN;AAAA;AAFX;AAIG,eAJH;AAAA;AAAA,WADI;AAAA;AALR,OADO,EAgBP;AACEgK,gBAAQ,WADV;AAEEQ,oBAAY,KAFd;AAGE;AACAD,cAAM,CAAC7J,QAJT;AAKEyJ,cAAM;AAAA,iBACJ;AAAA;AAAA;AACE,yBAAU,eADZ;AAEE,uBAAS;AAAA,uBAAM,OAAKL,iBAAL,CAAuBvI,MAAM6I,GAAN,CAAUpK,GAAjC,CAAN;AAAA;AAFX;AAAA;AAAA,WADI;AAAA;AALR,OAhBO;AAFX,KA9Cc,CAAhB;;AAkFA,WACE;AACE,iBAAU,qBADZ;AAEE,YAAMJ,QAFR;AAGE,eAASmK,OAHX;AAIE,kBAAY,IAJd;AAKE,iBAAW,IALb;AAME,gBAAU,KANZ;AAOE,sBAAa,CAACnK,QAAD,IAAaA,SAAS8J,MAAT,GAAkB,EAA/B,GAAoC,EAApC,GAAyC9J,SAAS8J,MAA/D,CAPF;AAQE,sBAAgB,KARlB;AASE,aAAO;AACLe,sBAAW/J,WAAW,SAAX,GAAuB,OAAlC;AADK;AATT,MADF;AAeD;;;EA5G+B,gBAAMgK;;AA+GxC,IAAMpI,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChC1C,cAAU/C,MAAMK,KAAN,CAAY0C,QADU;AAEhCc,cAAU7D,MAAMK,KAAN,CAAYwD;AAFU,GAAV;AAAA,CAAxB;;kBAKe,gCACb,yBAAQ4B,eAAR,EAAyB;AACvBqB,2DADuB;AAEvBC,iDAFuB;AAGvBI;AAHuB,CAAzB,EAIG4F,YAJH,CADa;;;;;;;;;;;;;;AChIf;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAVA,IAAMe,YAAY9J,QAAQ,iBAAR,CAAlB;;AAYO,IAAM+J,4BAAU,SAAVA,OAAU,QAAS;AAC9B,SACE;AAAA;AAAA,MAAO,IAAG,UAAV;AACE;AAAA;AAAA,QAAK,WAAU,eAAf;AACE;AAAA;AAAA,UAAQ,IAAG,cAAX,EAA0B,SAAS;AAAA,mBAAMrJ,MAAM6D,oBAAN,EAAN;AAAA,WAAnC;AACE,+CAAK,8BAAL,EAAkB,KAAI,EAAtB,GADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AADF,KADF;AAOE;AAAA;AAAA,QAAK,WAAU,eAAf;AAGE;AAAA;AAAA;AACE,cAAG,YADL;AAEE,oBAAU,CAAC7D,MAAM5B,OAFnB;AAGE,mBAASgL,UAAU;AAAA,mBAAMpJ,MAAM4C,cAAN,EAAN;AAAA,WAAV,EAAwC,IAAxC,EAA8C;AACrD0G,qBAAS,GAD4C;AAErDC,qBAAS;AAF4C,WAA9C;AAHX;AAQE,+CAAK,6BAAL,EAAwB,KAAI,EAA5B,GARF;AASE;AAAA;AAAA;AAAA;AAAA;AATF;AAHF,KAPF;AAsBE;AAAA;AAAA,QAAK,WAAU,eAAf;AACE;AAAA;AAAA,UAAQ,IAAG,cAAX,EAA0B,SAAS;AAAA,mBAAMvJ,MAAMsC,WAAN,EAAN;AAAA,WAAnC;AACE,+CAAK,6BAAL,EAAsB,KAAI,EAA1B,GADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AADF,KAtBF;AA4BE;AAAA;AAAA,QAAK,WAAU,eAAf;AACE;AAAA;AAAA,UAAQ,IAAG,aAAX,EAAyB,SAAS;AAAA,mBAAMtC,MAAMyC,UAAN,EAAN;AAAA,WAAlC;AACE,+CAAK,6BAAL,EAAqB,KAAI,EAAzB,GADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AADF,KA5BF;AAkCE;AAAA;AAAA,QAAK,WAAU,eAAf;AACE;AAAA;AAAA,UAAQ,IAAG,kBAAX,EAA8B,SAAS;AAAA,mBAAMzC,MAAM2C,UAAN,EAAN;AAAA,WAAvC;AACE,+CAAK,IAAG,YAAR,EAAqB,6BAArB,EAAqC,KAAI,EAAzC,GADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AADF;AAlCF,GADF;AA2CD,CA5CM;;kBA8CQ0G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3Df;;;;AACA;;AAEA;;;;AAEA;;;;AAEA,IAAMG,kBAAkB,SAAlBA,eAAkB,QAAS;AAC/B,MAAIC,iBAAJ;AACAzJ,QAAM0J,QAAN,GACKD,WAAczJ,MAAM0J,QAAN,CAAe/J,SAA7B,SAA0CK,MAAM0J,QAAN,CAAe9J,QAD9D,GAEK6J,WAAW,UAFhB;AAGA,SACE;AAAA;AAAA,MAAQ,IAAG,kBAAX;AACE;AAAA;AAAA;AAAA;AAAA,KADF;AAEE;AAAA;AAAA;AAAA;AACUA;AADV,KAFF;AAKE;AAAA;AAAA,QAAM,IAAG,SAAT;AACE;AAAA;AAAA;AACE,+CAAK,8BAAL,EAAsB,KAAI,EAA1B,GADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AADF;AALF,GADF;AAcD,CAnBD;;kBAqBeD;;;;;;;;;;;;;;;;;;AC5Bf;;;;AACA;;AAMA;;AACA;;AACA;;;;AAEA;;AAEA;;;;;;;;;;;;IAEaG,qBAAAA;;;;;;;;;uBACX7O,2BAAS;AACP,QAAM8O,kBACJ;AAAA;AAAA,QAAK,WAAU,eAAf;AACE;AAAA;AAAA;AAAA;AAAA,OADF;AAEE,6DAAa,YAAY,KAAK5J,KAAL,CAAWX,gBAApC;AAFF,KADF;;AAOA,WACE;AAAA;AAAA,QAAK,WAAU,cAAf;AACE,6CAAK,WAAU,SAAf,EAAyB,SAAS,KAAKW,KAAL,CAAW6D,oBAA7C,GADF;AAEE;AAAA;AAAA,UAAK,WAAU,wCAAf;AACE;AAAA;AAAA,YAAK,WAAU,qBAAf;AACE;AAAA;AAAA;AAAA;AAAA;AADF,SADF;AAIE;AAAA;AAAA,YAAK,WAAU,mBAAf;AACE;AAAA;AAAA,cAAK,WAAU,cAAf;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAA;AAAA,gBAAQ,SAAS,KAAK7D,KAAL,CAAWkD,cAA5B;AACE,qDAAK,8BAAL,EAAoB,KAAI,uBAAxB;AADF;AAFF,WADF;AAOE;AAAA;AAAA,cAAK,WAAU,eAAf;AACG,iBAAKlD,KAAL,CAAWX,gBAAX,CAA4B8I,MAA5B,GAAqC,CAArC,GACGyB,eADH,GAEG;AAAA;AAAA;AAAA;AAAA;AAHN;AAPF;AAJF;AAFF,KADF;AAuBD;;;EAhC6B,gBAAM9I;;AAmCtC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChC3B,eAAW9D,MAAMK,KAAN,CAAYyD,SADS;AAEhCC,sBAAkB/D,MAAMK,KAAN,CAAY0D;AAFE,GAAV;AAAA,CAAxB;;kBAKe,gCACb,yBAAQ0B,eAAR,EAAyB;AACvB8C,qDADuB;AAEvBX,yCAFuB;AAGvBE;AAHuB,CAAzB,EAIGuG,UAJH,CADa;;;;;;;;;ACvDf;;;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA;;IAEaE,sBAAAA;;;;;;;;;wBACXC,2DAAwBhC,GAAGiC,YAAY;AACrC;;;;AAIA,QAAIC,sBAAJ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,WAAW5B,MAA/B,EAAuC8B,GAAvC,EAA4C;AAC1C,UAAIF,WAAWE,CAAX,EAAcvG,aAAd,KAAgC,CAACoE,EAAEoC,MAAF,IAAYpC,EAAEqC,UAAf,EAA2BnL,KAA/D,EAAsE;AACpEgL,wBAAgBD,WAAWE,CAAX,EAAc7L,OAA9B;AACD;AACF;;AAED,SAAK4B,KAAL,CAAW4D,SAAX,CAAqBoG,aAArB;AACD;;wBACDlP,yBAAOkF,OAAO;AAAA;;AAAA,iBACwB,KAAKA,KAD7B;AAAA,QACJ+J,UADI,UACJA,UADI;AAAA,QACQK,WADR,UACQA,WADR;;;AAGZ,WACE;AAAA;AAAA;AACE,cAAK,QADP;AAEE,YAAG,QAFL;AAGE,kBAAU;AAAA,iBAAK,OAAKN,uBAAL,CAA6BhC,CAA7B,EAAgCiC,UAAhC,CAAL;AAAA;AAHZ;AAKE;AAAA;AAAA,UAAQ,cAAR,EAAiB,cAAjB,EAA0B,WAA1B;AACG,WADH;AAAA;AAC4B;AAD5B,OALF;AAQGA,iBAAWrL,GAAX,CAAe,UAAC4E,SAAD,EAAY1C,KAAZ;AAAA,eACd;AAAA;AAAA,YAAQ,KAAKA,KAAb,EAAoB,OAAO0C,UAAUH,GAArC;AACGG,oBAAUI;AADb,SADc;AAAA,OAAf;AARH,KADF;AAgBD;;;EAlC8B,gBAAM5C;;AAqCvC,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCgJ,gBAAYzO,MAAMK,KAAN,CAAY0D,gBADQ;AAEhC+K,iBAAa9O,MAAMK,KAAN,CAAYyO;AAFO,GAAV;AAAA,CAAxB;;kBAKe,gCACb,yBAAQrJ,eAAR,EAAyB;AACvB6C;AADuB,CAAzB,EAEGiG,WAFH,CADa;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDf;;;;AACA;;AACA;;;;;;;;;;kBAEe,6BAAqB;AAAA,MAC5BQ,cAD4B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA,6BAEhC3E,kBAFgC,iCAEX;AACnB,UAAI,CAAC,KAAK1F,KAAL,CAAWpC,aAAhB,EAA+B;AAC7B,aAAKoC,KAAL,CAAW+F,OAAX,CAAmBzB,IAAnB,CAAwB,UAAxB;AACD;AACF,KAN+B;;AAAA,6BAOhC0B,mBAPgC,gCAOZC,SAPY,EAOD;AAC7B,UAAI,CAACA,UAAUrI,aAAf,EAA8B;AAC5B,aAAKoC,KAAL,CAAW+F,OAAX,CAAmBzB,IAAnB,CAAwB,UAAxB;AACD;AACF,KAX+B;;AAAA,6BAYhCxJ,MAZgC,qBAYvB;AAAA,mBACsC,KAAKkF,KAD3C;AAAA,UACCmG,KADD,UACCA,KADD;AAAA,UACQmE,QADR,UACQA,QADR;AAAA,UACkBvE,OADlB,UACkBA,OADlB;AAAA,UAC2BwE,MAD3B,UAC2BA,MAD3B;;AAEP,aAAO,8BAAC,iBAAD,EAAuB,KAAKvK,KAA5B,CAAP;AACD,KAf+B;;AAAA;AAAA,IACL,gBAAMc,SADD;;AAiBlC,MAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,WAAU;AAChCnD,qBAAetC,MAAMJ,IAAN,CAAW0C;AADM,KAAV;AAAA,GAAxB;AAGA,SAAO,gCAAW,yBAAQmD,eAAR,EAAyBsJ,cAAzB,CAAX,CAAP;AACD","file":"","sourcesContent":["import 'babel-polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from './reducers/index';\r\nimport Main from './components/main';\r\nimport { LOGIN_SUCCESS } from './actions/types';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { autoRehydrate, persistStore } from 'redux-persist';\r\n\r\n// ADD IN REDUX DEBUGGER\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// CONFIGURE STORE TO PERSIST STATE AND USE REDUX DEV TOOLS\r\nconst store = createStore(\r\n  reducers,\r\n  undefined,\r\n  composeEnhancers(applyMiddleware(reduxThunk), autoRehydrate())\r\n);\r\n\r\n// BEGIN PERSISTING STATE\r\n/* TODO: BREAK OUT REDUCERS INTO SEPARATE CONCERNS SO THAT STATE CAN BE PERSISTED CONDITIONALLY */\r\npersistStore(store, () => {\r\n  console.log('rehydration complete!');\r\n});\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Main />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport {\r\n  POST_UPC,\r\n  INCREMENT_PRODUCT_QUANTITY,\r\n  INVALID_UPC,\r\n  LOGIN_FAILURE,\r\n  NOT_VERIFIED_LOGIN_ERROR,\r\n  REGISTER_FAILURE,\r\n  REGISTER_SUCCESS\r\n} from '../actions/types';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './auth_reducer';\r\nimport bbyAPIReducer from './bby_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer.plugin({\r\n    // CLEAR INPUT AFTER FORM SUBMIT SUCCEEDS\r\n    postUPC: (state, action) => {\r\n      switch (action.type) {\r\n        case POST_UPC:\r\n        case INCREMENT_PRODUCT_QUANTITY:\r\n        case INVALID_UPC:\r\n          return undefined;\r\n        default:\r\n          return state;\r\n      }\r\n    },\r\n    login: (state, action) => {\r\n      switch (action.type) {\r\n        case LOGIN_FAILURE:\r\n        case NOT_VERIFIED_LOGIN_ERROR:\r\n          return undefined;\r\n        default:\r\n          return state;\r\n      }\r\n    },\r\n    register: (state, action) => {\r\n      switch (action.type) {\r\n        case REGISTER_FAILURE:\r\n        case REGISTER_SUCCESS:\r\n          return undefined;\r\n        default:\r\n          return state;\r\n      }\r\n    }\r\n  }),\r\n  table: bbyAPIReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","// AUTH ACTIONS\r\nexport const UNAUTH_USER = 'UNAUTH_USER',\r\n  FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST',\r\n  RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST',\r\n  SET_NEW_TABLE_ID = 'SET_NEW_TABLE_ID',\r\n  LOAD_BLANK_TABLE = 'LOAD_BLANK_TABLE',\r\n  LOAD_SAVED_TABLE = 'LOAD_SAVED_TABLE',\r\n  TOGGLE_LOAD_TABLE_MODAL = 'TOGGLE_LOAD_TABLE_MODAL',\r\n  GET_USER_TABLE_DATA_SUCCESS = 'GET_USER_TABLE_DATA_SUCCESS',\r\n  NOT_VERIFIED_LOGIN_ERROR = 'NOT_VERIFIED_LOGIN_ERROR',\r\n  CLEAR_FLASH_MESSAGE = 'CLEAR_FLASH_MESSAGE',\r\n  LOGIN_REQUEST = 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE = 'LOGIN_FAILURE',\r\n  REGISTER_REQUEST = 'REGISTER_REQUEST',\r\n  REGISTER_SUCCESS = 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE = 'REGISTER_FAILURE';\r\n\r\n// BBY API ACTIONS\r\nexport const POST_UPC = 'POST_UPC';\r\n\r\n// TABLE ACTIONS\r\nexport const REMOVE_PRODUCT_FROM_TABLE = 'REMOVE_PRODUCT_FROM_TABLE',\r\n  DECREMENT_PRODUCT_QUANTITY = 'DECREMENT_PRODUCT_QUANTITY',\r\n  INCREMENT_PRODUCT_QUANTITY = 'INCREMENT_PRODUCT_QUANTITY',\r\n  FORMAT_TABLE = 'FORMAT_TABLE',\r\n  HIDE_ACTIONS = 'HIDE_ACTIONS',\r\n  SHOW_ACTIONS = 'SHOW_ACTIONS',\r\n  CLEAR_TABLE = 'CLEAR_TABLE',\r\n  INVALID_UPC = 'INVALID_UPC',\r\n  SYNC_TABLE_REQUEST = 'SYNC_TABLE_REQUEST',\r\n  SYNC_TABLE_SUCCESS = 'SYNC_TABLE_SUCCESS',\r\n  SYNC_TABLE_FAILURE = 'SYNC_TABLE_FAILURE';\r\n","import {\r\n  UNAUTH_USER,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_REQUEST,\r\n  REGISTER_ERROR,\r\n  NOT_VERIFIED_LOGIN_ERROR,\r\n  CLEAR_FLASH_MESSAGE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  SYNC_TABLE_REQUEST,\r\n  SYNC_TABLE_SUCCESS,\r\n  SYNC_TABLE_FAILURE\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  userProfile: null,\r\n  jwt: null,\r\n  error: '',\r\n  message: '',\r\n  content: '',\r\n  authenticated: false,\r\n  waiting: false\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        content: '',\r\n        error: '',\r\n        message: '',\r\n        authenticated: true,\r\n        userProfile: action.payload.user,\r\n        jwt: action.payload.jwt,\r\n        waiting: false\r\n      };\r\n    case UNAUTH_USER:\r\n      return { ...state, authenticated: false, jwt: null, userProfile: null };\r\n    case NOT_VERIFIED_LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        waiting: false\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        waiting: false\r\n      };\r\n    case CLEAR_FLASH_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        error: '',\r\n        message: '',\r\n        content: '',\r\n        waiting: false\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_REQUEST:\r\n      return { ...state, message: action.payload };\r\n    case RESET_PASSWORD_REQUEST:\r\n      return { ...state, message: action.payload };\r\n    case REGISTER_SUCCESS:\r\n      return { ...state, message: action.payload, waiting: false };\r\n    case REGISTER_FAILURE:\r\n      return { ...state, error: action.payload, waiting: false };\r\n    case SYNC_TABLE_SUCCESS:\r\n    case SYNC_TABLE_FAILURE:\r\n      return {\r\n        ...state,\r\n        waiting: false\r\n      };\r\n    case SYNC_TABLE_REQUEST:\r\n    case LOGIN_REQUEST:\r\n    case REGISTER_REQUEST:\r\n      return { ...state, waiting: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  POST_UPC,\r\n  FORMAT_TABLE,\r\n  INCREMENT_PRODUCT_QUANTITY,\r\n  GET_PRODUCTS_FROM_STORE,\r\n  REMOVE_PRODUCT_FROM_TABLE,\r\n  DECREMENT_PRODUCT_QUANTITY,\r\n  PRINT_TABLE,\r\n  SHOW_ACTIONS,\r\n  HIDE_ACTIONS,\r\n  CLEAR_TABLE,\r\n  SET_NEW_TABLE_ID,\r\n  LOAD_BLANK_TABLE,\r\n  LOAD_SAVED_TABLE,\r\n  TOGGLE_LOAD_TABLE_MODAL,\r\n  GET_USER_TABLE_DATA_SUCCESS,\r\n  SYNC_TABLE_SUCCESS,\r\n  UNAUTH_USER,\r\n  LOGIN_SUCCESS\r\n} from '../actions/types';\r\nconst orderBy = require('lodash.orderby');\r\n\r\nconst INITIAL_STATE = {\r\n  products: [],\r\n  formatted: false,\r\n  printing: false,\r\n  tableId: '',\r\n  showModal: false,\r\n  selectOptionData: null,\r\n  lastTimeSaved: '',\r\n  lastItemScanned: ''\r\n};\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    /* hack to ensure redux persist doesn't load in a previous session */\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        lastItemScanned: '',\r\n        lastTimeSaved: '',\r\n        tableId: '',\r\n        products: []\r\n      };\r\n    }\r\n    case POST_UPC:\r\n      /* Adds a new product to the top of the array.\r\n       * Also flips 'formatted' to false\r\n       */\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        formatted: false,\r\n        products: [action.payload, ...state.products],\r\n        lastItemScanned: action.payload.upc\r\n      });\r\n    case INCREMENT_PRODUCT_QUANTITY:\r\n      // INCREMENT QUANTITY AND CALCULATE NEW VALUE BASED ON UPDATED QTY\r\n      return {\r\n        ...state,\r\n        products: state.products.map(\r\n          product =>\r\n            action.payload === product.upc\r\n              ? {\r\n                  ...product,\r\n                  quantity: product.quantity + 1,\r\n                  totalValue: Math.round((product.quantity + 1) * product.value)\r\n                }\r\n              : product\r\n        ),\r\n        lastItemScanned: action.payload\r\n      };\r\n    case DECREMENT_PRODUCT_QUANTITY:\r\n      return {\r\n        ...state,\r\n        products: state.products.map(\r\n          product =>\r\n            action.payload === product.upc\r\n              ? {\r\n                  ...product,\r\n                  quantity: product.quantity > 1 ? product.quantity - 1 : 1,\r\n                  totalValue: Math.round((product.quantity - 1) * product.value)\r\n                }\r\n              : product\r\n        )\r\n      };\r\n    case REMOVE_PRODUCT_FROM_TABLE:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(\r\n          product => product.upc !== action.payload\r\n        )\r\n      };\r\n    case FORMAT_TABLE:\r\n      return {\r\n        ...state,\r\n        products: orderBy(\r\n          state.products,\r\n          ['departmentId', 'classId', 'sku'],\r\n          ['asc', 'asc', 'asc']\r\n        ),\r\n        formatted: true\r\n      };\r\n    case SHOW_ACTIONS:\r\n      return {\r\n        ...state,\r\n        printing: false\r\n      };\r\n    case HIDE_ACTIONS:\r\n      return {\r\n        ...state,\r\n        printing: true\r\n      };\r\n    case CLEAR_TABLE:\r\n      return {\r\n        ...state,\r\n        products: []\r\n      };\r\n    case SYNC_TABLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        lastTimeSaved: action.payload\r\n      };\r\n    case SET_NEW_TABLE_ID:\r\n      return {\r\n        ...state,\r\n        tableId: action.payload\r\n      };\r\n    case LOAD_BLANK_TABLE:\r\n      return {\r\n        ...state,\r\n        products: []\r\n      };\r\n    case LOAD_SAVED_TABLE:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case TOGGLE_LOAD_TABLE_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: !state.showModal\r\n      };\r\n    case GET_USER_TABLE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        selectOptionData: action.payload\r\n      };\r\n    case UNAUTH_USER:\r\n      return {\r\n        ...state,\r\n        products: [],\r\n        formatted: false,\r\n        printing: false,\r\n        tableId: '',\r\n        showModal: false,\r\n        selectOptionData: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// - AUTHENTICATION COMPONENTS\r\nimport Register from './auth/register';\r\nimport Login from './auth/login';\r\nimport Logout from './auth/logout';\r\nimport ForgotPassword from './auth/forgot_password';\r\nimport ResetPassword from './auth/reset_password';\r\nimport VerifyEmail from './auth/verify_email';\r\n\r\n// - PAGES\r\nimport NotFoundPage from './pages/not-found';\r\nimport LandingPage from '../components/pages/landing-page/landing-page';\r\n\r\n// - MISC\r\nimport Dashboard from './dashboard';\r\n\r\n// - HIGHER ORDER COMPONENTS (DECORATORS)\r\nimport RequireAuth from './auth/require_auth';\r\n\r\nconst Main = () =>\r\n  <main>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={LandingPage} />\r\n      <Route exact path=\"/sign-up\" component={Register} />\r\n      <Route exact path=\"/sign-in\" component={Login} />\r\n      <Route exact path=\"/dashboard\" component={RequireAuth(Dashboard)} />\r\n      <Route exact path=\"/logout\" component={Logout} />\r\n      <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n      <Route\r\n        exact\r\n        path=\"/reset-password/:resetToken\"\r\n        component={ResetPassword}\r\n      />\r\n      <Route path=\"/confirm-email/:verifyToken\" component={VerifyEmail} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  </main>;\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { registerUser } from '../../actions';\r\nimport Input from './form-input';\r\nimport LoadingIndicator from './loading';\r\n\r\nimport './register.scss';\r\n\r\nconst form = reduxForm({\r\n  form: 'register',\r\n  validate\r\n});\r\n\r\nconst validate = formProps => {\r\n  const errors = {};\r\n\r\n  if (!formProps.firstName) {\r\n    errors.firstName = 'Please enter a first name.';\r\n  }\r\n  if (!formProps.lastName) {\r\n    errors.lastName = 'Please enter a last name.';\r\n  }\r\n  if (!formProps.email) {\r\n    errors.email = 'Please enter an email.';\r\n  }\r\n  if (!formProps.password) {\r\n    errors.password = 'Please enter a password';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport class Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      registerInputs: [\r\n        {\r\n          name: 'firstName',\r\n          type: 'text',\r\n          label: 'First Name'\r\n        },\r\n        {\r\n          name: 'lastName',\r\n          type: 'text',\r\n          label: 'Last Name'\r\n        },\r\n        {\r\n          name: 'storeNumber',\r\n          type: 'number',\r\n          label: 'Store Number'\r\n        },\r\n        {\r\n          name: 'employeeNumber',\r\n          type: 'text',\r\n          label: 'Employee Number'\r\n        },\r\n        {\r\n          name: 'password',\r\n          type: 'password',\r\n          label: 'Password'\r\n        },\r\n        {\r\n          name: 'confirmPassword',\r\n          type: 'password',\r\n          label: 'Confirm Password'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  handleFormSubmit(formProps) {\r\n    this.props.registerUser(formProps);\r\n  }\r\n  renderAlert() {\r\n    if (this.props.errorMessage) {\r\n      return (\r\n        <div className=\"error-message\">\r\n          <p>{this.props.errorMessage}</p>\r\n        </div>\r\n      );\r\n    } else if (this.props.message) {\r\n      return (\r\n        <div className=\"success-message\">\r\n          <p>{this.props.message}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { handleSubmit, valid, waiting } = this.props;\r\n\r\n    const formInputs = this.state.registerInputs.map((input, index) => (\r\n      <Input key={index} {...input} />\r\n    ));\r\n    return (\r\n      <section id=\"register-section\">\r\n        {this.renderAlert()}\r\n        <LoadingIndicator\r\n          waiting={waiting}\r\n          message={'Setting things up real quick. Hang tight.'}\r\n        />\r\n        <section id=\"register-card\" className={waiting ? 'hide' : 'show'}>\r\n          <h1>Register here</h1>\r\n          <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\r\n            {formInputs}\r\n            <button disabled={!valid} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </section>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  waiting: state.auth.waiting,\r\n  errorMessage: state.auth.error,\r\n  message: state.auth.message,\r\n  authenticated: state.auth.authenticated\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { registerUser })(form(Register))\r\n);\r\n","import 'babel-polyfill';\r\nimport axios from 'axios';\r\nimport { browserHistory } from 'react-router';\r\nimport {\r\n  UNAUTH_USER,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_REQUEST,\r\n  POST_UPC,\r\n  INCREMENT_PRODUCT_QUANTITY,\r\n  DECREMENT_PRODUCT_QUANTITY,\r\n  REMOVE_PRODUCT_FROM_TABLE,\r\n  FORMAT_TABLE,\r\n  HIDE_ACTIONS,\r\n  SHOW_ACTIONS,\r\n  CLEAR_TABLE,\r\n  SET_NEW_TABLE_ID,\r\n  LOAD_BLANK_TABLE,\r\n  LOAD_SAVED_TABLE,\r\n  TOGGLE_LOAD_TABLE_MODAL,\r\n  GET_USER_TABLE_DATA_SUCCESS,\r\n  NOT_VERIFIED_LOGIN_ERROR,\r\n  INVALID_UPC,\r\n  CLEAR_FLASH_MESSAGE,\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS,\r\n  SYNC_TABLE_REQUEST,\r\n  SYNC_TABLE_SUCCESS,\r\n  SYNC_TABLE_FAILURE\r\n} from './types';\r\nconst _find = require('lodash.find');\r\n\r\nlet API_URL;\r\nprocess.env.NODE_ENV === 'production'\r\n  ? (API_URL = 'https://aqueous-headland-43492.herokuapp.com/api/v1')\r\n  : (API_URL = 'http://localhost:3000/api/v1');\r\n\r\nconst CLIENT_ROOT_URL = 'http://localhost:4444';\r\n\r\nlet timeout = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport const getProductDetails = upc => async (dispatch, getState) => {\r\n  const state = getState();\r\n  const jwt = state.auth.jwt;\r\n  const products = state.table.products;\r\n  if (_find(products, upc) !== undefined) {\r\n    /* If the product upc is already in the table state, increment the quantity.\r\n     * Dispatch is wrapped in a timeout to that ensures the proper timing of the\r\n     * resetting on the text input.\r\n     */\r\n    await timeout(100);\r\n    await dispatch({ type: INCREMENT_PRODUCT_QUANTITY, payload: upc.upc });\r\n  } else {\r\n    // IF THE PRODUCT IS UNIQUE AND DOESN'T EXIST WITHIN THE ARRAY\r\n    try {\r\n      let response;\r\n      response = await axios.post(`${API_URL}/best-buy/upc`, upc, {\r\n        headers: { Authorization: jwt }\r\n      });\r\n      await dispatch({ type: POST_UPC, payload: response.data });\r\n    } catch (error) {\r\n      await dispatch({ type: INVALID_UPC });\r\n\r\n      process.env.NODE_ENV !== 'test' &&\r\n        window.alert(\r\n          \"Looks like you didn't scan the right bar code. Please make sure you scan the UPC label\"\r\n        );\r\n    }\r\n  }\r\n};\r\n\r\nexport const decrementProductQuantity = upc => dispatch => {\r\n  dispatch({ type: DECREMENT_PRODUCT_QUANTITY, payload: upc });\r\n};\r\n\r\nexport const removeItemFromTable = upc => dispatch => {\r\n  dispatch({ type: REMOVE_PRODUCT_FROM_TABLE, payload: upc });\r\n};\r\n\r\nexport const formatTable = () => dispatch => {\r\n  dispatch({ type: FORMAT_TABLE });\r\n};\r\n\r\nexport const hideActions = () => async dispatch => {\r\n  await timeout(10);\r\n  dispatch({ type: HIDE_ACTIONS });\r\n};\r\n\r\nexport const showActions = () => async dispatch => {\r\n  await timeout(1000);\r\n  dispatch({ type: SHOW_ACTIONS });\r\n};\r\n\r\nexport const printTable = () => async dispatch => {\r\n  try {\r\n    await dispatch(hideActions(dispatch));\r\n    await timeout(100);\r\n    await window.print();\r\n    await dispatch(showActions(dispatch));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const clearTable = () => dispatch => {\r\n  dispatch({ type: CLEAR_TABLE });\r\n};\r\n\r\n/* PUTs all products in the current table to the DB on a timer\r\n * on PUT, replace previous table state with the current table \r\n * state (array)\r\n */\r\n\r\nexport const syncToDatabase = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: SYNC_TABLE_REQUEST\r\n    });\r\n    const state = getState();\r\n    const userId = state.auth.userProfile.id;\r\n    const jwt = state.auth.jwt;\r\n    const products = state.table.products;\r\n    const tableId = state.table.tableId;\r\n\r\n    const response = await axios.put(\r\n      `${API_URL}/tables/${userId}/${tableId}`,\r\n      { products: products },\r\n      {\r\n        headers: { Authorization: jwt }\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: SYNC_TABLE_SUCCESS,\r\n      payload: new Date().toLocaleTimeString()\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: SYNC_TABLE_FAILURE,\r\n      payload: error\r\n    });\r\n  }\r\n};\r\n\r\n/* Creates a new table for the user, then loads that table state into the view */\r\nexport const createNewTable = () => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const userId = state.auth.userProfile.id;\r\n    const jwt = state.auth.jwt;\r\n\r\n    const response = await axios.post(`${API_URL}/tables/${userId}`, {\r\n      headers: { Authorization: jwt }\r\n    });\r\n\r\n    await dispatch({ type: SET_NEW_TABLE_ID, payload: response.data._id });\r\n    await dispatch({ type: LOAD_BLANK_TABLE });\r\n    await dispatch({ type: TOGGLE_LOAD_TABLE_MODAL });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n/* Makes request for all past tables, \r\n * retrieving the date and the unique id of the table.\r\n */\r\nexport const getPreviousTableData = () => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const userId = state.auth.userProfile.id;\r\n    const jwt = state.auth.jwt;\r\n\r\n    const response = await axios.get(`${API_URL}/tables/${userId}`, {\r\n      headers: { Authorization: jwt }\r\n    });\r\n    const tableData = response.data.map(tableInstance => {\r\n      const tableId = tableInstance._id;\r\n\r\n      /* parse date to JS date object*/\r\n      const parsedDate = new Date(tableInstance.createdOn);\r\n\r\n      /* Simpler alternative needed for IE11 */\r\n      const formattedDate = `${parsedDate.toDateString()}-${parsedDate.toLocaleTimeString()}`;\r\n\r\n      return {\r\n        tableId,\r\n        formattedDate\r\n      };\r\n    });\r\n\r\n    await dispatch({ type: GET_USER_TABLE_DATA_SUCCESS, payload: tableData });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n/* loads existing table from user's collection of past tables */\r\nexport const loadTable = tableId => async (dispatch, getState) => {\r\n  try {\r\n    const state = getState();\r\n    const userId = state.auth.userProfile.id;\r\n    const jwt = state.auth.jwt;\r\n\r\n    const response = await axios.get(`${API_URL}/tables/${userId}/${tableId}`, {\r\n      headers: { Authorization: jwt }\r\n    });\r\n\r\n    await dispatch({ type: LOAD_SAVED_TABLE, payload: response.data.products });\r\n    await dispatch({ type: SET_NEW_TABLE_ID, payload: tableId });\r\n    await dispatch({ type: TOGGLE_LOAD_TABLE_MODAL });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const toggleShowTableModal = () => dispatch => {\r\n  dispatch({ type: TOGGLE_LOAD_TABLE_MODAL });\r\n};\r\n\r\n/* takes in props from login form */\r\nexport const loginUser = ({ employeeNumber, password }) => async dispatch => {\r\n  try {\r\n    await dispatch({ type: LOGIN_REQUEST });\r\n\r\n    const response = await axios.post(`${API_URL}/users/sign-in`, {\r\n      email: `${employeeNumber.trim()}@bestbuy.com`,\r\n      password\r\n    });\r\n\r\n    await dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: {\r\n        user: response.data.user,\r\n        jwt: response.data.token\r\n      }\r\n    });\r\n  } catch (err) {\r\n    let errorResponse = Object.keys(err.response.data)[0];\r\n\r\n    switch (errorResponse) {\r\n      case 'validationErrors':\r\n        const validationErrors = [];\r\n        err.response.data.validationErrors.forEach(error => {\r\n          validationErrors.push(error.msg);\r\n        });\r\n        await dispatch({ type: LOGIN_FAILURE, payload: validationErrors });\r\n        await timeout(8000);\r\n        await dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n\r\n        break;\r\n\r\n      case 'emailMessage':\r\n        await dispatch({\r\n          type: LOGIN_FAILURE,\r\n          payload: err.response.data.emailMessage\r\n        });\r\n        await timeout(8000);\r\n        await dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n\r\n        break;\r\n\r\n      case 'verifyMessage':\r\n        await dispatch({\r\n          type: NOT_VERIFIED_LOGIN_ERROR,\r\n          payload: err.response.data.verifyMessage\r\n        });\r\n        await timeout(8000);\r\n        await dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n\r\n        break;\r\n\r\n      case 'passwordMessage':\r\n        await dispatch({\r\n          type: LOGIN_FAILURE,\r\n          payload: err.response.data.passwordMessage\r\n        });\r\n        await timeout(8000);\r\n        await dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n        break;\r\n\r\n      default:\r\n        await dispatch({\r\n          type: LOGIN_FAILURE,\r\n          payload: 'IT ALL BLEW UP'\r\n        });\r\n        await timeout(8000);\r\n        await dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\nexport const registerUser = ({\r\n  firstName,\r\n  lastName,\r\n  password,\r\n  employeeNumber,\r\n  storeNumber\r\n}) => async dispatch => {\r\n  try {\r\n    dispatch({ type: REGISTER_REQUEST });\r\n    await axios.post(`${API_URL}/users`, {\r\n      firstName,\r\n      lastName,\r\n      password,\r\n      employeeNumber,\r\n      storeNumber\r\n    });\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload:\r\n        'Registered successfully, now check your work email to verify your account'\r\n    });\r\n    await timeout(8000);\r\n    dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n  } catch (error) {\r\n    const errorResponse = Object.keys(error.response.data)[0];\r\n    switch (errorResponse) {\r\n      /* conflict error */\r\n      case 'message':\r\n        dispatch({\r\n          type: REGISTER_FAILURE,\r\n          payload: error.response.data.message\r\n        });\r\n        await timeout(8000);\r\n        dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n        break;\r\n      /* validation error */\r\n      case 'messages':\r\n        dispatch({\r\n          type: REGISTER_FAILURE,\r\n          payload: error.response.data.messages[0].msg\r\n        });\r\n        await timeout(8000);\r\n        dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n        break;\r\n      default:\r\n        dispatch({\r\n          type: REGISTER_FAILURE,\r\n          payload: 'IT ALL BLEW UP'\r\n        });\r\n        await timeout(8000);\r\n        dispatch({ type: CLEAR_FLASH_MESSAGE });\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\nexport const logoutUser = error => dispatch => {\r\n  dispatch({ type: UNAUTH_USER, payload: error || '' });\r\n};\r\n\r\nexport const getForgotPasswordToken = ({ email }) => async dispatch => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/users/forgot-password`, {\r\n      email\r\n    });\r\n    await dispatch({\r\n      type: FORGOT_PASSWORD_REQUEST,\r\n      payload: response.data.message\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const resetPassword = (token, { password }) => async dispatch => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/users/reset-password/${token}`,\r\n      { password }\r\n    );\r\n\r\n    await dispatch({\r\n      type: RESET_PASSWORD_REQUEST,\r\n      payload: response.data.message\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const confirmEmail = token => async dispatch => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/users/verify-email/${token}`);\r\n    await dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: {\r\n        user: response.data.user,\r\n        jwt: response.data.jwt\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\n\r\nimport './form-input.scss';\r\n\r\nconst required = value => (value ? undefined : 'Required');\r\n\r\nconst renderField = (field, props) =>\r\n  <input\r\n    {...field.input}\r\n    autoComplete=\"off\"\r\n    type={field.type}\r\n    className={field.input.value === '' ? '' : 'has-content'}\r\n  />;\r\n\r\nconst Input = props =>\r\n  <div className=\"input-wrapper\">\r\n    <Field\r\n      name={props.name || 'input'}\r\n      component={renderField}\r\n      type={props.type}\r\n      validate={required}\r\n    />\r\n    <label className=\"register-label\" htmlFor={props.name}>\r\n      {props.label}\r\n    </label>\r\n    <span className=\"focus-border\" />\r\n  </div>;\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport './loading.scss';\r\n\r\nconst LoadingIndicator = ({ waiting, message }) => (\r\n  <div id=\"loading-container\" className={waiting ? 'show' : 'hide'}>\r\n    <span className=\"loader loader-circles\" />\r\n    <p>{message}</p>\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\nimport { loginUser } from '../../actions';\r\nimport Input from './form-input';\r\nimport LoadingIndicator from './loading';\r\nimport './form-input.scss';\r\nimport './login.scss';\r\n\r\nconst form = reduxForm({\r\n  form: 'login'\r\n});\r\n\r\nexport class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginInputs: [\r\n        {\r\n          name: 'employeeNumber',\r\n          type: 'text',\r\n          label: 'Employee Number'\r\n        },\r\n        {\r\n          name: 'password',\r\n          type: 'password',\r\n          label: 'Password'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  handleFormSubmit(formProps) {\r\n    this.props.loginUser(formProps);\r\n  }\r\n  renderAlert() {\r\n    if (this.props.errorMessage) {\r\n      return (\r\n        <div className=\"error-message\">\r\n          <p>{this.props.errorMessage}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { handleSubmit, valid, waiting } = this.props;\r\n\r\n    const formInputs = this.state.loginInputs.map((input, index) => (\r\n      <Input key={index} {...input} />\r\n    ));\r\n\r\n    const form = (\r\n      <section id=\"login-wrapper\">\r\n        <LoadingIndicator\r\n          waiting={waiting}\r\n          message={'Signing you in now. Please wait.'}\r\n        />\r\n        <div className=\"test-credentials\">\r\n          <p>\r\n            <span>Employee Number</span>: a1\r\n          </p>\r\n          <p>\r\n            <span>Password</span>: testtesttest\r\n          </p>\r\n        </div>\r\n        {this.renderAlert()}\r\n        <div id=\"login-card\" className={waiting ? 'hide' : 'show'}>\r\n          <h1>Sign In</h1>\r\n          <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\r\n            {formInputs}\r\n            <button type=\"submit\" disabled={!valid}>\r\n              Login\r\n            </button>\r\n            <Link to=\"/forgot-password\">Forgot password?</Link>\r\n            <Link to=\"/sign-up\">Sign Up</Link>\r\n            <p>Just testing? Use the temporary credentials below.</p>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n    // IF AUTHENTICATED, REDIRECT TO DASHBOARD\r\n    return this.props.authenticated ? <Redirect to=\"/dashboard\" /> : form;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  waiting: state.auth.waiting,\r\n  errorMessage: state.auth.error,\r\n  message: state.auth.message,\r\n  authenticated: state.auth.authenticated\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { loginUser })(form(Login)));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\n\r\nexport class Logout extends React.Component {\r\n  componentWillMount() {\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Redirect to=\"/\" />;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(null, actions)(Logout));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getForgotPasswordToken } from '../../actions/index';\r\n\r\nimport './forgot_password.scss';\r\n\r\nimport './form-input.scss';\r\nimport Input from './form-input';\r\n\r\nconst form = reduxForm({\r\n  form: 'forgotPassword'\r\n});\r\n\r\nexport class ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputs: [\r\n        {\r\n          name: 'employeeNumber',\r\n          type: 'text',\r\n          label: 'Employee Number'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  handleFormSubmit(formProps) {\r\n    this.props.getForgotPasswordToken(formProps);\r\n  }\r\n  renderAlert() {\r\n    if (this.props.errorMessage) {\r\n      return (\r\n        <div>\r\n          <span>\r\n            <strong>Error!</strong> {this.props.errorMessage}\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    const formInputs = this.state.inputs.map((input, index) =>\r\n      <Input key={index} {...input} />\r\n    );\r\n\r\n    return (\r\n      <section id=\"forgot-password-wrapper\">\r\n        <div id=\"forgot-password-card\">\r\n          <h1>Forgot password</h1>\r\n          <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\r\n            {this.renderAlert()}\r\n            {formInputs}\r\n            <button type=\"submit\">Reset Password</button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errorMessage: state.auth.error,\r\n  message: state.auth.message,\r\n  authenticated: state.auth.authenticated\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { getForgotPasswordToken })(form(ForgotPassword))\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { resetPassword } from '../../actions/index';\r\n\r\nimport Input from './form-input';\r\nimport './form-input.scss';\r\n\r\nimport './reset_password.scss';\r\n\r\nconst form = reduxForm({\r\n  form: 'resetPassword',\r\n  validate\r\n});\r\n\r\nexport const validate = formProps => {\r\n  const errors = {};\r\n\r\n  if (!formProps.password) {\r\n    errors.password = 'Please enter a new password';\r\n  }\r\n\r\n  if (!formProps.passwordConfirm) {\r\n    errors.passwordConfirm = 'Please confirm new password';\r\n  }\r\n\r\n  if (formProps.password !== formProps.passwordConfirm) {\r\n    errors.password = 'Passwords must match';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport class ResetPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputs: [\r\n        {\r\n          name: 'password',\r\n          type: 'password',\r\n          label: 'Password'\r\n        },\r\n        {\r\n          name: 'passwordConfirm',\r\n          type: 'password',\r\n          label: 'Confirm Password'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    if (this.props.authenticated) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n  componentWillUpdate(nextProps) {\r\n    if (nextProps.authenticated) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n  handleFormSubmit({ password }, formProps) {\r\n    const resetToken = this.props.match.params.resetToken;\r\n    this.props.resetPassword(resetToken, { password });\r\n  }\r\n  renderAlert() {\r\n    if (this.props.errorMessage) {\r\n      return (\r\n        <div>\r\n          <strong>OOPS!</strong>\r\n          {this.props.errorMessage}\r\n        </div>\r\n      );\r\n    } else if (this.props.message) {\r\n      return (\r\n        <div>\r\n          <strong>Success!</strong>\r\n          {this.props.message}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    const formInputs = this.state.inputs.map((input, index) =>\r\n      <Input key={index} {...input} />\r\n    );\r\n\r\n    return (\r\n      <section id=\"reset-password-wrapper\">\r\n        <div id=\"reset-password-card\">\r\n          <h1>Reset Password</h1>\r\n          <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\r\n            {this.renderAlert()}\r\n            {formInputs}\r\n            <button action=\"submit\">Change Password</button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errorMessage: state.auth.error,\r\n  message: state.auth.resetMessage\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { resetPassword })(form(ResetPassword))\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { confirmEmail } from '../../actions/index';\r\n\r\nimport './verify_email.scss';\r\n\r\nexport class VerifyEmail extends React.Component {\r\n  componentDidMount() {\r\n    const verifyEmailToken = this.props.match.params.verifyToken;\r\n    this.props.confirmEmail(verifyEmailToken);\r\n  }\r\n\r\n  redirectToDash() {\r\n    this.props.history.push('/dashboard');\r\n  }\r\n  render() {\r\n    return (\r\n      <section id=\"confirm-email-wrapper\">\r\n        <div id=\"confirm-email-card\">\r\n          <h1>Thank you for registering your account!</h1>\r\n          <button onClick={() => this.redirectToDash()}>Get started</button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  //\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { confirmEmail })(VerifyEmail)\r\n);\r\n","import React from 'react';\r\nimport './not-found.scss';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () =>\r\n  <Route\r\n    render={({ history }) =>\r\n      <div>\r\n        <svg viewBox=\"0 0 600 300\">\r\n          <symbol id=\"s-text\">\r\n            <text textAnchor=\"middle\" x=\"50%\" y=\"50%\" dy=\".35em\">\r\n              404 ERROR\r\n            </text>\r\n          </symbol>\r\n          <use className=\"text\" xlinkHref=\"#s-text\" />\r\n          <use className=\"text\" xlinkHref=\"#s-text\" />\r\n          <use className=\"text\" xlinkHref=\"#s-text\" />\r\n          <use className=\"text\" xlinkHref=\"#s-text\" />\r\n          <use className=\"text\" xlinkHref=\"#s-text\" />\r\n        </svg>\r\n\r\n        <button id=\"safety\" onClick={() => history.push('/dashboard')}>\r\n          Back to Safety\r\n        </button>\r\n      </div>}\r\n  />;\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\n\r\nimport HeroArea from './hero-area';\r\nimport HowSection from './how-section';\r\nimport AboutSection from './about-section';\r\nimport Footer from './footer';\r\n\r\nimport simple from '../../../static/noun_971031_cc.svg';\r\nimport reliable from '../../../static/noun_1007187_cc.svg';\r\nimport secure from '../../../static/noun_821171_cc.svg';\r\nimport fast from '../../../static/noun_658468_cc.svg';\r\n\r\nexport default class LandingPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      footerData: [\r\n        {\r\n          name: 'Start here',\r\n          link: '/sign-up'\r\n        },\r\n        {\r\n          name: 'Sign in',\r\n          link: '/sign-in'\r\n        },\r\n        {\r\n          name: 'Official Best Buy API Status',\r\n          link: 'https://developer.bestbuy.com/api-status'\r\n        }\r\n      ],\r\n      cardData: [\r\n        {\r\n          name: 'simple',\r\n          img: simple,\r\n          desc: '...but powerful'\r\n        },\r\n        {\r\n          name: 'reliable',\r\n          img: reliable,\r\n          desc: 'There when you need it'\r\n        },\r\n        {\r\n          name: 'safe',\r\n          img: secure,\r\n          desc: 'Without compromises'\r\n        },\r\n        {\r\n          name: 'fast',\r\n          img: fast,\r\n          desc: 'Designed with speed in mind'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing-page\">\r\n        <HeroArea />\r\n        <HowSection cardData={this.state.cardData} />\r\n        <AboutSection />\r\n        <Footer footerData={this.state.footerData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './hero-area.scss';\r\n\r\nconst HeroArea = () => (\r\n  <section id=\"hero-atf\">\r\n    <div className=\"button-container\">\r\n      <Link id=\"sign-up-button\" to=\"/sign-up\">\r\n        <button id=\"btn-signup\">Sign Up</button>\r\n      </Link>\r\n\r\n      <Link id=\"sign-in-button\" to=\"/sign-in\">\r\n        <button id=\"btn-signin\">Sign In</button>\r\n      </Link>\r\n    </div>\r\n    <div className=\"hero-img\" />\r\n    <div className=\"hero-content\">\r\n      <h1>Quantified</h1>\r\n      <h2>\r\n        A streamlined system for efficiently and accurately managing retail\r\n        inventory.\r\n      </h2>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default HeroArea;\r\n","import React from 'react';\r\nimport './how-section.scss';\r\nimport Card from './how-card';\r\n\r\nimport simple from '../../../static/noun_971031_cc.svg';\r\nimport reliable from '../../../static/noun_1007187_cc.svg';\r\nimport secure from '../../../static/noun_821171_cc.svg';\r\nimport fast from '../../../static/noun_658468_cc.svg';\r\n\r\nconst HowSection = props => {\r\n  const howCards = props.cardData.map((card, index) =>\r\n    <Card key={index} {...card} />\r\n  );\r\n  return (\r\n    <section id=\"how-section\">\r\n      <div className=\"card-container\">\r\n        {howCards}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HowSection;\r\n","import React from 'react';\r\nimport './how-card.scss';\r\n\r\nconst Card = props =>\r\n  <div className=\"how-card\">\r\n    <img src={props.img} alt={props.name + ' icon'} />\r\n    <h3>\r\n      {props.name}\r\n    </h3>\r\n    <h5>\r\n      {props.desc}\r\n    </h5>\r\n  </div>;\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './about-section.scss';\r\n\r\nconst AboutSection = () => (\r\n  <section id=\"about-section\">\r\n    <h1>About Quantified</h1>\r\n    <blockquote>\r\n      \"A streamlined system for efficiently and accurately managing retail\r\n      inventory.\"\r\n    </blockquote>\r\n    <p>\r\n      That sounds great and all, but what does that mean exactly? Imagine for a\r\n      moment that you are in a retail setting. When shipments of products come\r\n      into your store, they will be accompanied by a manifest that notates\r\n      exactly what products and how many of them were put onto the trailer when\r\n      it left the distribution center. It is the job of one employee to verify\r\n      everything listed on the manifest actually makes it to the store, not an\r\n      easy or quick task by any means.\r\n    </p>\r\n    <p>\r\n      The previous workflow (at least at Best Buy) for counting all of these\r\n      products involved printing out a copy of the aforementioned manifest, then\r\n      tallying up the products one by one. Sounds monotonous and error prone\r\n      right? That's where Quantified comes in to save the day by bearing the\r\n      responsibility of accounting for everything.\r\n    </p>\r\n    <p>\r\n      Instead of manually counting each product, Quantified allows the user to\r\n      simply scan the bar code of the product and automatically populates all of\r\n      its relevant information into a row in a table. From there, after\r\n      everything has been scanned, the table can be formatted to mirror the\r\n      manifest and printed for seamless comparison with the manifest for the\r\n      final verification.\r\n    </p>\r\n    <p>\r\n      Additionally, Quantified is built with battle tested and industry leading\r\n      technology as well as the Best Buy API. All together this yields unmatched\r\n      dependability, speed, and security.\r\n    </p>\r\n  </section>\r\n);\r\n\r\nexport default AboutSection;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './footer.scss';\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <footer>\r\n      <ul>\r\n        {props.footerData.map(\r\n          (data, index) =>\r\n            index === 2 ? (\r\n              <li key={index}>\r\n                <a href={data.link} target=\"_blank\">\r\n                  {data.name}\r\n                </a>\r\n              </li>\r\n            ) : (\r\n              <li key={index}>\r\n                <Link to={data.link}>{data.name}</Link>\r\n              </li>\r\n            )\r\n        )}\r\n        <li>\r\n          <a href=\"https://github.com/chrstntdd\" target=\"_blank\">\r\n            Created by Christian Todd\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// CHILD COMPONENTS\r\nimport SearchBar from './search-bar';\r\nimport ProductTable from './product-table';\r\nimport SideBar from './side-bar';\r\nimport DashboardHeader from './dashboard-header';\r\nimport TableModal from './table-modal';\r\n\r\nimport {\r\n  syncToDatabase,\r\n  getPreviousTableData,\r\n  formatTable,\r\n  printTable,\r\n  clearTable,\r\n  toggleShowTableModal\r\n} from '../actions/index.js';\r\n\r\nimport './dashboard.scss';\r\n\r\nexport class Dashboard extends React.Component {\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      /* timeout to ensure JWT has loaded and will be available for fetching tables */\r\n      this.props.getPreviousTableData();\r\n    }, 2000);\r\n  }\r\n  componentWillUpdate() {\r\n    /* Save table to DB ever 5 minutes ONLY if there is a table loaded*/\r\n    this.props.tableId &&\r\n      setInterval(() => this.props.syncToDatabase(), 300000);\r\n  }\r\n\r\n  render() {\r\n    let { showModal, userProfile } = this.props;\r\n\r\n    let modal;\r\n    if (showModal) {\r\n      modal = <TableModal />;\r\n    }\r\n    return (\r\n      <div id=\"dashboard-wrapper\">\r\n        {modal}\r\n        <DashboardHeader userData={userProfile} />\r\n        <div id=\"main-content-area\">\r\n          <SideBar\r\n            tableId={this.props.tableId}\r\n            toggleShowTableModal={this.props.toggleShowTableModal}\r\n            syncToDatabase={this.props.syncToDatabase}\r\n            formatTable={this.props.formatTable}\r\n            printTable={this.props.printTable}\r\n            clearTable={this.props.clearTable}\r\n          />\r\n          <section id=\"main-table-area\">\r\n            <SearchBar />\r\n            <ProductTable />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  content: state.auth.content,\r\n  userProfile: state.auth.userProfile,\r\n  showModal: state.table.showModal,\r\n  tableId: state.table.tableId\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    syncToDatabase,\r\n    getPreviousTableData,\r\n    formatTable,\r\n    printTable,\r\n    clearTable,\r\n    syncToDatabase,\r\n    toggleShowTableModal\r\n  })(Dashboard)\r\n);\r\n","import React from 'react';\r\nimport { INVALID_UPC } from '../actions/types.js';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getProductDetails } from '../actions';\r\nimport LoadingIndicator from './auth/loading';\r\n\r\nimport './search-bar.scss';\r\n\r\nconst form = reduxForm({\r\n  form: 'postUPC'\r\n});\r\n\r\nexport class SearchBar extends React.Component {\r\n  handleChange = (e, props) => {\r\n    const { getProductDetails, dispatch } = this.props;\r\n    const inputValue = e.currentTarget.value;\r\n\r\n    if (!isNaN(Number(inputValue)) && inputValue.length === 12) {\r\n      /* If the UPC is valid */\r\n      getProductDetails({ upc: inputValue.toString() });\r\n    } else if (isNaN(Number(inputValue))) {\r\n      /* If the input is not a number  */\r\n      setTimeout(() => dispatch({ type: INVALID_UPC }), 10);\r\n      alert(`Looks like you didn't quite scan the UPC. Try again please.`);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tableId,\r\n      handleSubmit,\r\n      waiting,\r\n      lastTimeSaved,\r\n      lastItemScanned\r\n    } = this.props;\r\n\r\n    return (\r\n      <section id=\"search-section\">\r\n        <div id=\"last-time-saved\">\r\n          {waiting ? (\r\n            <LoadingIndicator waiting={waiting} message={'Saving...'} />\r\n          ) : (\r\n            <p>Last saved at: {lastTimeSaved}</p>\r\n          )}\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <Field\r\n              id=\"upcInput\"\r\n              onChange={e => this.handleChange(e)}\r\n              autoComplete=\"false\"\r\n              name=\"upc\"\r\n              component=\"input\"\r\n              placeholder=\"UPC\"\r\n              type=\"number\"\r\n              /* disable input if there is no current table loaded */\r\n              disabled={tableId ? false : true}\r\n            />\r\n          </div>\r\n        </form>\r\n        <div id=\"last-item-scanned\">\r\n          <p>Last item scanned</p>\r\n          <p className=\"upc\">UPC: {lastItemScanned}</p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.table.products,\r\n  tableId: state.table.tableId,\r\n  lastTimeSaved: state.table.lastTimeSaved,\r\n  lastItemScanned: state.table.lastItemScanned,\r\n  waiting: state.auth.waiting\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    getProductDetails\r\n  })(form(SearchBar))\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from 'react-table';\r\nimport {\r\n  decrementProductQuantity,\r\n  removeItemFromTable,\r\n  printTable\r\n} from '../actions/index';\r\n\r\nimport styles from './product-table.scss';\r\n\r\nexport class ProductTable extends React.PureComponent {\r\n  removeItem(upc) {\r\n    this.props.removeItemFromTable(upc);\r\n  }\r\n\r\n  decrementQuantity(upc) {\r\n    this.props.decrementProductQuantity(upc);\r\n  }\r\n  render() {\r\n    const { products, printing } = this.props;\r\n\r\n    const columns = [\r\n      {\r\n        Header: 'Product Information',\r\n        columns: [\r\n          {\r\n            Header: 'Department',\r\n            accessor: 'departmentId',\r\n            minWidth: 100,\r\n            Cell: props => `${props.row.departmentId} - ${props.row.department}`\r\n          },\r\n          {\r\n            Header: 'Department',\r\n            accessor: 'department',\r\n            show: false\r\n          },\r\n          {\r\n            Header: 'Class',\r\n            accessor: 'classId',\r\n            minWidth: 50\r\n          },\r\n          {\r\n            Header: 'SKU',\r\n            accessor: 'sku',\r\n            minWidth: 75\r\n          },\r\n          {\r\n            Header: 'Model Number',\r\n            accessor: 'modelNumber'\r\n          },\r\n          {\r\n            Header: 'Name',\r\n            accessor: 'name',\r\n            minWidth: 200\r\n          },\r\n          {\r\n            Header: 'UPC',\r\n            accessor: 'upc',\r\n            minWidth: 100\r\n          },\r\n          {\r\n            Header: 'Quantity',\r\n            accessor: 'quantity',\r\n            minWidth: 50\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: 'Actions',\r\n        columns: [\r\n          {\r\n            Header: 'Remove',\r\n            filterable: false,\r\n            /* used to toggle visibility on print */\r\n            show: !printing,\r\n            Cell: props => (\r\n              <button\r\n                className=\"remove-btn\"\r\n                onClick={() => this.removeItem(props.row.upc)}\r\n              >\r\n                {' '}\r\n                REMOVE\r\n              </button>\r\n            )\r\n          },\r\n          {\r\n            Header: 'Decrement',\r\n            filterable: false,\r\n            /* used to toggle visibility on print */\r\n            show: !printing,\r\n            Cell: props => (\r\n              <button\r\n                className=\"decrement-btn\"\r\n                onClick={() => this.decrementQuantity(props.row.upc)}\r\n              >\r\n                -1\r\n              </button>\r\n            )\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <ReactTable\r\n        className=\"-striped -highlight\"\r\n        data={products}\r\n        columns={columns}\r\n        filterable={true}\r\n        resizable={true}\r\n        sortable={false}\r\n        pageSize={`${!products || products.length < 10 ? 10 : products.length}`}\r\n        showPagination={false}\r\n        style={{\r\n          height: `${printing ? 'initial' : '530px'}`\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.table.products,\r\n  printing: state.table.printing\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    decrementProductQuantity,\r\n    removeItemFromTable,\r\n    printTable\r\n  })(ProductTable)\r\n);\r\n","import React from 'react';\r\nconst _debounce = require('lodash.debounce');\r\n\r\nimport printIcon from '../static/noun_772280_cc.svg';\r\nimport formatIcon from '../static/noun_796398_cc.svg';\r\nimport undoButton from '../static/noun_1031806_cc.svg';\r\nimport redoButton from '../static/noun_1031802_cc.svg';\r\nimport clearIcon from '../static/noun_926276_cc.svg';\r\nimport databaseSync from '../static/noun_932928_cc.svg';\r\nimport manage from '../static/noun_1082747_cc.svg';\r\n\r\nimport './side-bar.scss';\r\n\r\nexport const SideBar = props => {\r\n  return (\r\n    <aside id=\"side-bar\">\r\n      <div className=\"btn-container\">\r\n        <button id=\"manageButton\" onClick={() => props.toggleShowTableModal()}>\r\n          <img src={manage} alt=\"\" />\r\n          <p>Manage</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"btn-container\">\r\n        {/* button is disabled until a tableId is set.\r\n          * also the button can't be spammed :) */}\r\n        <button\r\n          id=\"saveButton\"\r\n          disabled={!props.tableId}\r\n          onClick={_debounce(() => props.syncToDatabase(), 5000, {\r\n            maxWait: 100,\r\n            leading: true\r\n          })}\r\n        >\r\n          <img src={databaseSync} alt=\"\" />\r\n          <p>Save</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"btn-container\">\r\n        <button id=\"formatButton\" onClick={() => props.formatTable()}>\r\n          <img src={formatIcon} alt=\"\" />\r\n          <p>Format</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"btn-container\">\r\n        <button id=\"printButton\" onClick={() => props.printTable()}>\r\n          <img src={printIcon} alt=\"\" />\r\n          <p>Print</p>\r\n        </button>\r\n      </div>\r\n      <div className=\"btn-container\">\r\n        <button id=\"clearTableButton\" onClick={() => props.clearTable()}>\r\n          <img id=\"clear-icon\" src={clearIcon} alt=\"\" />\r\n          <p>Clear</p>\r\n        </button>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport logoutIcon from '../static/noun_1155291_cc.svg';\r\n\r\nimport './dashboard-header.scss';\r\n\r\nconst DashboardHeader = props => {\r\n  let userName;\r\n  props.userData\r\n    ? (userName = `${props.userData.firstName} ${props.userData.lastName}`)\r\n    : (userName = 'Employee');\r\n  return (\r\n    <header id=\"dashboard-header\">\r\n      <h1>Quantified Dashboard</h1>\r\n      <h2>\r\n        Hello, {userName}\r\n      </h2>\r\n      <Link to=\"/logout\">\r\n        <button>\r\n          <img src={logoutIcon} alt=\"\" />\r\n          <p>Sign out</p>\r\n        </button>\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default DashboardHeader;\r\n","import React from 'react';\r\nimport {\r\n  toggleShowTableModal,\r\n  createNewTable,\r\n  getPreviousTableData\r\n} from '../actions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SelectTable from './select-table';\r\n\r\nimport './table-modal.scss';\r\n\r\nimport newTable from '../static/noun_1074124_cc.svg';\r\n\r\nexport class TableModal extends React.Component {\r\n  render() {\r\n    const selectComponent = (\r\n      <div className=\"selectWrapper\">\r\n        <h3>Load a saved table</h3>\r\n        <SelectTable userTables={this.props.selectOptionData} />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"global-modal\">\r\n        <div className=\"overlay\" onClick={this.props.toggleShowTableModal} />\r\n        <div className=\"global-modal_contents modal-transition\">\r\n          <div className=\"global-modal-header\">\r\n            <h2>Manage tables</h2>\r\n          </div>\r\n          <div className=\"global-modal-body\">\r\n            <div className=\"content-left\">\r\n              <h3>Create a new table</h3>\r\n              <button onClick={this.props.createNewTable}>\r\n                <img src={newTable} alt=\"create new table icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"content-right\">\r\n              {this.props.selectOptionData.length > 0\r\n                ? selectComponent\r\n                : <h3>Start off by creating a new table.</h3>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  showModal: state.table.showModal,\r\n  selectOptionData: state.table.selectOptionData\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    toggleShowTableModal,\r\n    createNewTable,\r\n    getPreviousTableData\r\n  })(TableModal)\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadTable } from '../actions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './select-table.scss';\r\n\r\n/* receive all table instances, referenced by Id, displayed by date. Load on select */\r\n\r\nexport class SelectTable extends React.Component {\r\n  handleSelectTableToLoad(e, userTables) {\r\n    /* filter through the userTables in props, \r\n     * to match the formatted date with the correct tableId \r\n     */\r\n\r\n    let tableIdToLoad;\r\n    for (let i = 0; i < userTables.length; i++) {\r\n      if (userTables[i].formattedDate === (e.target || e.srcElement).value) {\r\n        tableIdToLoad = userTables[i].tableId;\r\n      }\r\n    }\r\n\r\n    this.props.loadTable(tableIdToLoad);\r\n  }\r\n  render(props) {\r\n    const { userTables, loadedTable } = this.props;\r\n\r\n    return (\r\n      <select\r\n        name=\"select\"\r\n        id=\"select\"\r\n        onChange={e => this.handleSelectTableToLoad(e, userTables)}\r\n      >\r\n        <option disabled selected value>\r\n          {' '}-- Select a table --{' '}\r\n        </option>\r\n        {userTables.map((tableData, index) =>\r\n          <option key={index} value={tableData._id}>\r\n            {tableData.formattedDate}\r\n          </option>\r\n        )}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userTables: state.table.selectOptionData,\r\n  loadedTable: state.table.loadedTable\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    loadTable\r\n  })(SelectTable)\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default ComposedComponent => {\r\n  class Authentication extends React.Component {\r\n    componentWillMount() {\r\n      if (!this.props.authenticated) {\r\n        this.props.history.push('/sign-in');\r\n      }\r\n    }\r\n    componentWillUpdate(nextProps) {\r\n      if (!nextProps.authenticated) {\r\n        this.props.history.push('/sign-in');\r\n      }\r\n    }\r\n    render() {\r\n      const { match, location, history, router } = this.props;\r\n      return <ComposedComponent {...this.props} />;\r\n    }\r\n  }\r\n  const mapStateToProps = state => ({\r\n    authenticated: state.auth.authenticated\r\n  });\r\n  return withRouter(connect(mapStateToProps)(Authentication));\r\n};\r\n"]}